<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:BinCounterApp.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x406e3ec0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x406e03e8"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x406e03e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x406fe408"/></to>
    </wire>
    <wire loc="8:BinCounterApp.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4093f280"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407e5010"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407e5010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407f3698"/></to>
    </wire>
    <wire loc="9:BinCounterApp.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4094fc00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4095d010"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4095d010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409586e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:BinCounterApp.nc">
      <from><interface-ref name="BinCounter" scoped="" ref="0x406e3998"/></from>
      <to><interface-ref name="BinCounter" scoped="" ref="0x40940d30"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406e2030"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4096e010"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x406fe7a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x404599d8"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404599d8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x406becd0"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406fed68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406e28e0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406e28e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406ed2b8"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407d9240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x406e2030"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x406ed6c8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x406ee3d8"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x406ee3d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406eec28"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x406edaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406ef7d8"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x406ede88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40808280"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406eec28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407140f8"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x4070b310"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x407144c8"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x406de370"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40714ec8"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x40738010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x4079e120"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x40741ba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407ae010"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x4073ed28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407a1430"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x40744168"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407b5cc8"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x40742ee8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407a3c78"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x407485f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407b55f0"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x40743bf8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407bca28"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x4073ab80"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407b2a10"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x40735830"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x4076a3e0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x40745010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407a9010"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x407495f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407aa8d0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x4073c7e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407abe68"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x407335f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4079d270"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x40744a08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407b1be8"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x4073b468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407a6ca8"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x407346c8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4079eb78"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x40728bb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407529c0"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x40748db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407b1510"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x40739468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407a3220"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x4074b708"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407c28f8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x4073e488"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40769550"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x407458b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407a5e88"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x40742728"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4076ae38"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x40749db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407a57b0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x40743358"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407c0b08"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x4073a010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407b6af0"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x407475f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407c0430"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x407466a8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407ad190"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x40747db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407bc350"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x4074ade8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407aea68"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x4074a2a8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x407bd870"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x407719f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40771688"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x40771d48"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x407cb3e8"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x4076f0b8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x407cb870"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40769d08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407529c0"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x40791970"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40771688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407a1be8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407529c0"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407a0890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40771688"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4079da28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407529c0"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x4079c6d0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40771688"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x4076c410"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x4076c768"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x407cbcf8"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x4076cac0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x407ca1b0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407ad948"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407ac5f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407a97c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407a7430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407b8650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407b7278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407b4510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407b3190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407b0430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407af080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407bf350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407be010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407bb270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x407bbe88"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x4076c0a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4045a178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x406bd590"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x406caa40"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4045d568"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40808280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407f3350"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x408035d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407e4418"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407e4418"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x4091c1f0"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407f1010"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x407e4e20"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407e4e20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40930990"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407f19f8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40809840"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40809840"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x409471a8"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4091cb68"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x408454c8"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x408454c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ddd68"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x4092f350"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x40844688"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x40844688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408da5c8"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x40947b20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x40843848"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x40843848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408d8d68"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x40812bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40885010"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x4081cd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089cd68"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x4084bf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x40866c98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f7d68"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x40849068"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408aad68"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x4082f178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408afd68"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x4083a3e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c5d68"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x4083c368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408fcd68"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x4085d4c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408bdd68"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x40854280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ecd68"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x40861288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f45c8"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x40824178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408965c8"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x4085c680"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ba5c8"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x408224c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408915c8"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x4082c688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a75c8"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x40837928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408d55c8"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x40842a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ee5c8"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x4084f848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f45c8"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x4081a848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088a140"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x4081ea08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a2de8"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x40829bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b8d68"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x4084cd80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x40869758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e45c8"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x40862168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f45c8"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x40858d80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408df5c8"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x40826010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b3e68"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x40831178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e2d68"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x4083e010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e7d68"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x40868918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408fcd68"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x4085b838"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ced68"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x40811d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40883730"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x40830010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b15c8"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x40841bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ecd68"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x4082e368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x408395a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c25c8"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x408514c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f95c8"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x40859bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e2d68"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x40814558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40875220"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x40820688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088fd68"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x4082b848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408bdd68"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x40836ae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408d3d68"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x40856010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b8d68"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x408533d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e95c8"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x40865e58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f45c8"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x40834e68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ced68"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x40855170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b55c8"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x40813a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408888a0"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x4081dbc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089e5c8"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x40828d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b55c8"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x4085aa00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408cb5c8"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x40867ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f95c8"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x4083b288"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c85c8"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x40846368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408df5c8"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x4083d178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e45c8"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x40825010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40899df8"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x40840d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e95c8"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x40823368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40894d68"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x4082d4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408aad68"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x40838768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c0d68"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x40850688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f7d68"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x40805688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088d918"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x4081f848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a45c8"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x4082aa08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ba5c8"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x40835ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408d05c8"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x40847348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a75c8"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x40852598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e7d68"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x408481a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a75c8"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x40832010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408cb5c8"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x40863010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f7d68"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x408603e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ee5c8"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x4084ea28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408afd68"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x409586e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4096e7c0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4096e7c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a1d210"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4096e010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409663c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409687f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a45bc8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409663c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cccb58"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40a325a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409fc0a0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a04398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40966818"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40966818"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cc8a38"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a2d588"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409b0938"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409b0938"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409ae980"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40cccb58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ce5540"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40cc4870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cca010"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40cca010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ce59b8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40cc65d8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409b0938"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x40ce3340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x40ce9970"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x40ce9970"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40ce2010"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x40ce75d0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x40ce75d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40ce2a48"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x40ce6030"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x40ce6030"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x40741ba8"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x4074ade8"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x4073b468"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x40749db8"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x4073a010"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x407485f8"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x4073ab80"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x40748db8"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x4074b708"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x407475f8"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x4074a2a8"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x40747db8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x409bcbd0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x409ad440"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x409ad440"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409bfe10"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x409abf08"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40a02d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4045a178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40a2f798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4045a178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BinCounterP" loc="1:BinCounterP.nc">
      <module/>
    </component>
    <component qname="BinCounterC" loc="1:BinCounterC.nc">
      <module/>
    </component>
    <component qname="BinCounterApp.Timer" loc="44(BinCounterApp.Timer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x407517d0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x40751a08" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x40751c50" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x40751e68" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x407500c0" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x407502d0" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x407504f8" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x40750720" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x40750990" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x4076bca8" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x4076bf08" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x408747b8" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x408749e8" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x40874c18" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x40874e48" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x40873068" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40997428" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40997428"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x409a9010" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x409a9010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x409bb090" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x409bb090"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x409bb4f0" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x409bb4f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x409bb758" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x409bb758"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x409bbbc8" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x409bbbc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x409bbe30" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x409ba2e0" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x409ba2e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x409b5b00" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x409b5b00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x409e1010" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x409e1010"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x409e1278" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x409e1278"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x409e16e8" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x409e16e8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x409e1950" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409fed50" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409fed50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a1c3a8" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a1c3a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40a1c588" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a2eb28" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a2eb28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x406e2030" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x406e2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e2208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x406e03e8" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x406e03e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x406e05c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406e28e0" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406e28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x406edaa8" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x406edaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406edc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406ed2b8" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406ed2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ed490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x406ed6c8" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x406ed6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ed8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x406ede88" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x406ede88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ec070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406ef7d8" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406ef7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ef9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x406ee3d8" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x406ee3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ee5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x4070b310" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x4070b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x4070bb08"/>
        <function-ref name="initTimerB" scoped="" ref="0x4070b5c8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x4070b6a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x4070b788"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x4070b4e8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x4070b868"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x4070b948"/>
        <function-ref name="initClocks" scoped="" ref="0x4070ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406eec28" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x406eec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406eee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x407144c8" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x407144c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x40714cc0"/>
        <function-ref name="initTimerB" scoped="" ref="0x40714780"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x40714860"/>
        <function-ref name="initTimerA" scoped="" ref="0x40714940"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x407146a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x40714a20"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x40714b00"/>
        <function-ref name="initClocks" scoped="" ref="0x40714be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40714ec8" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x40714ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407120c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407140f8" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x407140f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407142d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x40738010" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x40738010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407381e8"/>
        <function-ref name="getControl" scoped="" ref="0x407382c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407383a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40738488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40738568"/>
        <function-ref name="disableEvents" scoped="" ref="0x40738648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40738728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40738808"/>
        <function-ref name="setControl" scoped="" ref="0x407388e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x40741ba8" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x40741ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40741d80"/>
        <function-ref name="getControl" scoped="" ref="0x40741e60"/>
        <function-ref name="enableEvents" scoped="" ref="0x4073c010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4073c0f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4073c1d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4073c2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4073c390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4073c470"/>
        <function-ref name="setControl" scoped="" ref="0x4073c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x4073ed28" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x4073ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4073ef00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40733010"/>
        <function-ref name="captured" scoped="" ref="0x407330f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407331d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407332b0"/>
        <function-ref name="setEdge" scoped="" ref="0x40733390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x40744168" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x40744168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40744340"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40744420"/>
        <function-ref name="captured" scoped="" ref="0x40744500"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407445e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407446c0"/>
        <function-ref name="setEdge" scoped="" ref="0x407447a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x40742ee8" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x40742ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407340e0"/>
        <function-ref name="setEvent" scoped="" ref="0x407341c0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407342a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40734380"/>
        <function-ref name="fired" scoped="" ref="0x40734460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x407485f8" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x407485f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407487d0"/>
        <function-ref name="setEvent" scoped="" ref="0x407488b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40748990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40748a70"/>
        <function-ref name="fired" scoped="" ref="0x40748b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x40743bf8" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x40743bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40743dd0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40743eb0"/>
        <function-ref name="captured" scoped="" ref="0x40754010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407540f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407541d0"/>
        <function-ref name="setEdge" scoped="" ref="0x407542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x4073ab80" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x4073ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4073ad58"/>
        <function-ref name="getControl" scoped="" ref="0x4073ae38"/>
        <function-ref name="enableEvents" scoped="" ref="0x4073af18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074b010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074b0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074b1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074b2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074b390"/>
        <function-ref name="setControl" scoped="" ref="0x4074b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x40735830" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x40735830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40735a08"/>
        <function-ref name="getControl" scoped="" ref="0x40735ae8"/>
        <function-ref name="enableEvents" scoped="" ref="0x40735bc8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40735ca8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40735d88"/>
        <function-ref name="disableEvents" scoped="" ref="0x40735e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40739010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407390f0"/>
        <function-ref name="setControl" scoped="" ref="0x407391d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x40745010" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x40745010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407451e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407452c8"/>
        <function-ref name="captured" scoped="" ref="0x407453a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40745488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40745568"/>
        <function-ref name="setEdge" scoped="" ref="0x40745648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x407495f8" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x407495f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407497d0"/>
        <function-ref name="setEvent" scoped="" ref="0x407498b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40749990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40749a70"/>
        <function-ref name="fired" scoped="" ref="0x40749b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x4073c7e8" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x4073c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4073ca40"/>
        <function-ref name="getControl" scoped="" ref="0x4073cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x4073cc00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4073cce0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4073cdc0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4073cea0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4073b010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4073b0f0"/>
        <function-ref name="setControl" scoped="" ref="0x4073b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x407335f8" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x407335f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407337d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407338b0"/>
        <function-ref name="captured" scoped="" ref="0x40733990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40733a70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40733b50"/>
        <function-ref name="setEdge" scoped="" ref="0x40733c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x40744a08" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x40744a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40744be0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40744cc0"/>
        <function-ref name="captured" scoped="" ref="0x40744da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40744e80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40743010"/>
        <function-ref name="setEdge" scoped="" ref="0x407430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x4073b468" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x4073b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4073b640"/>
        <function-ref name="getControl" scoped="" ref="0x4073b720"/>
        <function-ref name="enableEvents" scoped="" ref="0x4073b800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4073b8e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4073b9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4073baa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4073bb80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4073bc60"/>
        <function-ref name="setControl" scoped="" ref="0x4073bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x407346c8" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x407346c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407348a0"/>
        <function-ref name="setEvent" scoped="" ref="0x40734980"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40734a60"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40734b40"/>
        <function-ref name="fired" scoped="" ref="0x40734c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x40728bb0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x40728bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40728d88"/>
        <function-ref name="setClockSource" scoped="" ref="0x40728e68"/>
        <function-ref name="enableEvents" scoped="" ref="0x4072c010"/>
        <function-ref name="get" scoped="" ref="0x4072c0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4072c1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4072c2b0"/>
        <function-ref name="getMode" scoped="" ref="0x4072c390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4072c470"/>
        <function-ref name="overflow" scoped="" ref="0x4072c550"/>
        <function-ref name="setMode" scoped="" ref="0x4072c630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4072c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x40748db8" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x40748db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40747010"/>
        <function-ref name="setEvent" scoped="" ref="0x407470f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407471d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407472b0"/>
        <function-ref name="fired" scoped="" ref="0x40747390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x40739468" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x40739468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40739640"/>
        <function-ref name="getControl" scoped="" ref="0x40739720"/>
        <function-ref name="enableEvents" scoped="" ref="0x40739800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407398e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407399c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40739aa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40739b80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40739c60"/>
        <function-ref name="setControl" scoped="" ref="0x40739d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x4074b708" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x4074b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074b8e0"/>
        <function-ref name="getControl" scoped="" ref="0x4074b9c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074baa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074bb80"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074bc60"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074bd40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074be20"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074bf00"/>
        <function-ref name="setControl" scoped="" ref="0x4074a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x4073e488" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x4073e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4073e660"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4073e740"/>
        <function-ref name="captured" scoped="" ref="0x4073e820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4073e900"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4073e9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x4073eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x407458b0" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x407458b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40745a88"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40745b68"/>
        <function-ref name="captured" scoped="" ref="0x40745c48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40745d28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40745e08"/>
        <function-ref name="setEdge" scoped="" ref="0x40745ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x40742728" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x40742728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40742900"/>
        <function-ref name="setEvent" scoped="" ref="0x407429e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40742ac0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40742ba0"/>
        <function-ref name="fired" scoped="" ref="0x40742c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x40749db8" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x40749db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40748010"/>
        <function-ref name="setEvent" scoped="" ref="0x407480f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407481d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407482b0"/>
        <function-ref name="fired" scoped="" ref="0x40748390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x40743358" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x40743358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40743530"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40743610"/>
        <function-ref name="captured" scoped="" ref="0x407436f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407437d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407438b0"/>
        <function-ref name="setEdge" scoped="" ref="0x40743990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x4073a010" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x4073a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4073a1e8"/>
        <function-ref name="getControl" scoped="" ref="0x4073a2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x4073a3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4073a488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4073a568"/>
        <function-ref name="disableEvents" scoped="" ref="0x4073a648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4073a728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4073a808"/>
        <function-ref name="setControl" scoped="" ref="0x4073a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x40733e60" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x40733e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40741050"/>
        <function-ref name="setClockSource" scoped="" ref="0x40741130"/>
        <function-ref name="enableEvents" scoped="" ref="0x40741210"/>
        <function-ref name="get" scoped="" ref="0x407412f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407413d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407414b0"/>
        <function-ref name="getMode" scoped="" ref="0x40741590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40741670"/>
        <function-ref name="overflow" scoped="" ref="0x40741750"/>
        <function-ref name="setMode" scoped="" ref="0x40741830"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40741910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x407475f8" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x407475f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407477d0"/>
        <function-ref name="setEvent" scoped="" ref="0x407478b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40747990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40747a70"/>
        <function-ref name="fired" scoped="" ref="0x40747b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x407466a8" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x407466a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40746880"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40746960"/>
        <function-ref name="captured" scoped="" ref="0x40746a40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40746b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40746c00"/>
        <function-ref name="setEdge" scoped="" ref="0x40746ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x40747db8" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x40747db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407460c0"/>
        <function-ref name="setEvent" scoped="" ref="0x407461a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40746280"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40746360"/>
        <function-ref name="fired" scoped="" ref="0x40746440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x4074ade8" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x4074ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40749010"/>
        <function-ref name="setEvent" scoped="" ref="0x407490f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407491d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407492b0"/>
        <function-ref name="fired" scoped="" ref="0x40749390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x4074a2a8" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x4074a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4074a480"/>
        <function-ref name="getControl" scoped="" ref="0x4074a560"/>
        <function-ref name="enableEvents" scoped="" ref="0x4074a640"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4074a720"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4074a800"/>
        <function-ref name="disableEvents" scoped="" ref="0x4074a8e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4074a9c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4074aaa0"/>
        <function-ref name="setControl" scoped="" ref="0x4074ab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x40771d48" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x40771d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40771f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x407719f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x407719f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40771bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x4076f0b8" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x4076f0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4076f290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x40771688" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x40771688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40771870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407529c0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407529c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40752b98"/>
        <function-ref name="setClockSource" scoped="" ref="0x40752c78"/>
        <function-ref name="enableEvents" scoped="" ref="0x40752d58"/>
        <function-ref name="get" scoped="" ref="0x40752e38"/>
        <function-ref name="disableEvents" scoped="" ref="0x40752f18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40771010"/>
        <function-ref name="getMode" scoped="" ref="0x407710f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407711d0"/>
        <function-ref name="overflow" scoped="" ref="0x407712b0"/>
        <function-ref name="setMode" scoped="" ref="0x40771390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40771470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x4076c768" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x4076c768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4076c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x4076c410" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x4076c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4076c5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x4076cac0" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x4076cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4076cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x4076c0a8" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x4076c0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4076c290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4076d3d8" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4076d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076d5b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x4076d690"/>
        <function-ref name="enableEvents" scoped="" ref="0x4076d770"/>
        <function-ref name="get" scoped="" ref="0x4076d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x4076d930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4076da10"/>
        <function-ref name="getMode" scoped="" ref="0x4076daf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4076dbd0"/>
        <function-ref name="overflow" scoped="" ref="0x4076dcb0"/>
        <function-ref name="setMode" scoped="" ref="0x4076dd90"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4076de70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40769550" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x40769550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40769728"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40769808"/>
        <function-ref name="captured" scoped="" ref="0x407698e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407699c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40769aa8"/>
        <function-ref name="setEdge" scoped="" ref="0x40769b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x4076a3e0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x4076a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4076a5b8"/>
        <function-ref name="getControl" scoped="" ref="0x4076a698"/>
        <function-ref name="enableEvents" scoped="" ref="0x4076a778"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4076a858"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4076a938"/>
        <function-ref name="disableEvents" scoped="" ref="0x4076aa18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4076aaf8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4076abd8"/>
        <function-ref name="setControl" scoped="" ref="0x4076acb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x40791970" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x40791970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40791b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4076ae38" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x4076ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40769050"/>
        <function-ref name="setEvent" scoped="" ref="0x40769130"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40769210"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407692f0"/>
        <function-ref name="fired" scoped="" ref="0x407693d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40769d08" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40769d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40769ee0"/>
        <function-ref name="setClockSource" scoped="" ref="0x40791010"/>
        <function-ref name="enableEvents" scoped="" ref="0x407910f0"/>
        <function-ref name="get" scoped="" ref="0x407911d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407912b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40791390"/>
        <function-ref name="getMode" scoped="" ref="0x40791470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40791550"/>
        <function-ref name="overflow" scoped="" ref="0x40791630"/>
        <function-ref name="setMode" scoped="" ref="0x40791710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407a1430" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407a1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407a1608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407a16e8"/>
        <function-ref name="captured" scoped="" ref="0x407a17c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a18a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a1988"/>
        <function-ref name="setEdge" scoped="" ref="0x407a1a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407a3220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407a3220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407a33f8"/>
        <function-ref name="getControl" scoped="" ref="0x407a34d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407a35b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407a3698"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407a3778"/>
        <function-ref name="disableEvents" scoped="" ref="0x407a3858"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407a3938"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407a3a18"/>
        <function-ref name="setControl" scoped="" ref="0x407a3af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407a0890" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407a0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a0a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407a3c78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407a3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407a3e50"/>
        <function-ref name="setEvent" scoped="" ref="0x407a1010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407a10f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407a11d0"/>
        <function-ref name="fired" scoped="" ref="0x407a12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407a1be8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407a1be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a1dc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x407a1ea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x407a0010"/>
        <function-ref name="get" scoped="" ref="0x407a00f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407a01d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a02b0"/>
        <function-ref name="getMode" scoped="" ref="0x407a0390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a0470"/>
        <function-ref name="overflow" scoped="" ref="0x407a0550"/>
        <function-ref name="setMode" scoped="" ref="0x407a0630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407a0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4079d270" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x4079d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4079d448"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4079d528"/>
        <function-ref name="captured" scoped="" ref="0x4079d608"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4079d6e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4079d7c8"/>
        <function-ref name="setEdge" scoped="" ref="0x4079d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x4079e120" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x4079e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4079e2f8"/>
        <function-ref name="getControl" scoped="" ref="0x4079e3d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x4079e4b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4079e598"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4079e678"/>
        <function-ref name="disableEvents" scoped="" ref="0x4079e758"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4079e838"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4079e918"/>
        <function-ref name="setControl" scoped="" ref="0x4079e9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x4079c6d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x4079c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4079c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4079eb78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x4079eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4079ed50"/>
        <function-ref name="setEvent" scoped="" ref="0x4079ee30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4079ef10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4079d010"/>
        <function-ref name="fired" scoped="" ref="0x4079d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4079da28" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4079da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4079dc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x4079dce0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4079ddc0"/>
        <function-ref name="get" scoped="" ref="0x4079dea0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4079c010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4079c0f0"/>
        <function-ref name="getMode" scoped="" ref="0x4079c1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4079c2b0"/>
        <function-ref name="overflow" scoped="" ref="0x4079c390"/>
        <function-ref name="setMode" scoped="" ref="0x4079c470"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4079c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407ad190" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407ad190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407ad368"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407ad448"/>
        <function-ref name="captured" scoped="" ref="0x407ad528"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407ad608"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ad6e8"/>
        <function-ref name="setEdge" scoped="" ref="0x407ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407ae010" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407ae1e8"/>
        <function-ref name="getControl" scoped="" ref="0x407ae2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407ae3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407ae488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407ae568"/>
        <function-ref name="disableEvents" scoped="" ref="0x407ae648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407ae728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407ae808"/>
        <function-ref name="setControl" scoped="" ref="0x407ae8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407ac5f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407ac5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407ac7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407aea68" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407aea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407aec40"/>
        <function-ref name="setEvent" scoped="" ref="0x407aed20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407aee00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407aeee0"/>
        <function-ref name="fired" scoped="" ref="0x407ad010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407ad948" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407ad948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407adb20"/>
        <function-ref name="setClockSource" scoped="" ref="0x407adc00"/>
        <function-ref name="enableEvents" scoped="" ref="0x407adce0"/>
        <function-ref name="get" scoped="" ref="0x407addc0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407adea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407ac010"/>
        <function-ref name="getMode" scoped="" ref="0x407ac0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ac1d0"/>
        <function-ref name="overflow" scoped="" ref="0x407ac2b0"/>
        <function-ref name="setMode" scoped="" ref="0x407ac390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407ac470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407a9010" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407a91e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407a92c8"/>
        <function-ref name="captured" scoped="" ref="0x407a93a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a9488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a9568"/>
        <function-ref name="setEdge" scoped="" ref="0x407a9648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407abe68" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407abe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407aa050"/>
        <function-ref name="getControl" scoped="" ref="0x407aa130"/>
        <function-ref name="enableEvents" scoped="" ref="0x407aa210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407aa2f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407aa3d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407aa4b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407aa590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407aa670"/>
        <function-ref name="setControl" scoped="" ref="0x407aa750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407a7430" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407a7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a7608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407aa8d0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407aa8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407aaaa8"/>
        <function-ref name="setEvent" scoped="" ref="0x407aab88"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407aac68"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407aad48"/>
        <function-ref name="fired" scoped="" ref="0x407aae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407a97c8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407a97c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a99a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x407a9a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x407a9b60"/>
        <function-ref name="get" scoped="" ref="0x407a9c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x407a9d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a9e00"/>
        <function-ref name="getMode" scoped="" ref="0x407a9ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a7010"/>
        <function-ref name="overflow" scoped="" ref="0x407a70f0"/>
        <function-ref name="setMode" scoped="" ref="0x407a71d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407a5e88" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407a5e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b8070"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407b8150"/>
        <function-ref name="captured" scoped="" ref="0x407b8230"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b8310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b83f0"/>
        <function-ref name="setEdge" scoped="" ref="0x407b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407a6ca8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407a6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407a6e80"/>
        <function-ref name="getControl" scoped="" ref="0x407a5010"/>
        <function-ref name="enableEvents" scoped="" ref="0x407a50f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407a51d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407a52b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407a5390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407a5470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407a5550"/>
        <function-ref name="setControl" scoped="" ref="0x407a5630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407b7278" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407b7278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b7450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407a57b0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407a57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407a5988"/>
        <function-ref name="setEvent" scoped="" ref="0x407a5a68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407a5b48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407a5c28"/>
        <function-ref name="fired" scoped="" ref="0x407a5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407b8650" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407b8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407b8828"/>
        <function-ref name="setClockSource" scoped="" ref="0x407b8908"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b89e8"/>
        <function-ref name="get" scoped="" ref="0x407b8ac8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b8ba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b8c88"/>
        <function-ref name="getMode" scoped="" ref="0x407b8d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b8e48"/>
        <function-ref name="overflow" scoped="" ref="0x407b8f28"/>
        <function-ref name="setMode" scoped="" ref="0x407b7018"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407b70f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407b5cc8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407b5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b5ea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407b4010"/>
        <function-ref name="captured" scoped="" ref="0x407b40f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b41d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b42b0"/>
        <function-ref name="setEdge" scoped="" ref="0x407b4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407b6af0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407b6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407b6cc8"/>
        <function-ref name="getControl" scoped="" ref="0x407b6da8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b6e88"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407b5010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407b50f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b51d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407b52b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407b5390"/>
        <function-ref name="setControl" scoped="" ref="0x407b5470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407b3190" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407b3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b3368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407b55f0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407b55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b57c8"/>
        <function-ref name="setEvent" scoped="" ref="0x407b58a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407b5988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407b5a68"/>
        <function-ref name="fired" scoped="" ref="0x407b5b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407b4510" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407b4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407b46e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x407b47c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b48a8"/>
        <function-ref name="get" scoped="" ref="0x407b4988"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b4a68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b4b48"/>
        <function-ref name="getMode" scoped="" ref="0x407b4c28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b4d08"/>
        <function-ref name="overflow" scoped="" ref="0x407b4de8"/>
        <function-ref name="setMode" scoped="" ref="0x407b4ec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407b1be8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407b1be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b1dc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407b1ea0"/>
        <function-ref name="captured" scoped="" ref="0x407b0010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b00f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b01d0"/>
        <function-ref name="setEdge" scoped="" ref="0x407b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407b2a10" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407b2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407b2be8"/>
        <function-ref name="getControl" scoped="" ref="0x407b2cc8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b2da8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407b2e88"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407b1010"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b10f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407b11d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407b12b0"/>
        <function-ref name="setControl" scoped="" ref="0x407b1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407af080" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407af080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407af258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407b1510" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407b1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407b16e8"/>
        <function-ref name="setEvent" scoped="" ref="0x407b17c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407b18a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407b1988"/>
        <function-ref name="fired" scoped="" ref="0x407b1a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407b0430" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407b0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407b0608"/>
        <function-ref name="setClockSource" scoped="" ref="0x407b06e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407b07c8"/>
        <function-ref name="get" scoped="" ref="0x407b08a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407b0988"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407b0a68"/>
        <function-ref name="getMode" scoped="" ref="0x407b0b48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407b0c28"/>
        <function-ref name="overflow" scoped="" ref="0x407b0d08"/>
        <function-ref name="setMode" scoped="" ref="0x407b0de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407b0ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407c0b08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407c0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407c0ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407c0dc0"/>
        <function-ref name="captured" scoped="" ref="0x407c0ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bf010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bf0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x407bf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407c28f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407c28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407c2ad0"/>
        <function-ref name="getControl" scoped="" ref="0x407c2bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x407c2c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407c2d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407c2e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x407c0010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407c00f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407c01d0"/>
        <function-ref name="setControl" scoped="" ref="0x407c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407be010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407be010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407be1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407c0430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407c0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407c0608"/>
        <function-ref name="setEvent" scoped="" ref="0x407c06e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407c07c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407c08a8"/>
        <function-ref name="fired" scoped="" ref="0x407c0988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407bf350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407bf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407bf528"/>
        <function-ref name="setClockSource" scoped="" ref="0x407bf608"/>
        <function-ref name="enableEvents" scoped="" ref="0x407bf6e8"/>
        <function-ref name="get" scoped="" ref="0x407bf7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407bf8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bf988"/>
        <function-ref name="getMode" scoped="" ref="0x407bfa68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bfb48"/>
        <function-ref name="overflow" scoped="" ref="0x407bfc28"/>
        <function-ref name="setMode" scoped="" ref="0x407bfd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407bfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407bca28" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x407bca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407bcc00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x407bcce0"/>
        <function-ref name="captured" scoped="" ref="0x407bcdc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bcea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bb010"/>
        <function-ref name="setEdge" scoped="" ref="0x407bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x407bd870" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x407bd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407bda48"/>
        <function-ref name="getControl" scoped="" ref="0x407bdb28"/>
        <function-ref name="enableEvents" scoped="" ref="0x407bdc08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407bdce8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407bddc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407bdea8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407bc010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407bc0f0"/>
        <function-ref name="setControl" scoped="" ref="0x407bc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x407bbe88" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x407bbe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407ba070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407bc350" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x407bc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407bc528"/>
        <function-ref name="setEvent" scoped="" ref="0x407bc608"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407bc6e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407bc7c8"/>
        <function-ref name="fired" scoped="" ref="0x407bc8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407bb270" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x407bb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407bb448"/>
        <function-ref name="setClockSource" scoped="" ref="0x407bb528"/>
        <function-ref name="enableEvents" scoped="" ref="0x407bb608"/>
        <function-ref name="get" scoped="" ref="0x407bb6e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407bb7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407bb8a8"/>
        <function-ref name="getMode" scoped="" ref="0x407bb988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407bba68"/>
        <function-ref name="overflow" scoped="" ref="0x407bbb48"/>
        <function-ref name="setMode" scoped="" ref="0x407bbc28"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407bbd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x407ca1b0" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x407ca1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407ca388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x407cb3e8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x407cb3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cb5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x407cb870" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x407cb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x407cbcf8" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x407cbcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cbed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x406de370" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x406de370"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406de548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4045d568" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x4045d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x4045d740"/>
        <function-ref name="irq_postamble" scoped="" ref="0x4045d820"/>
        <function-ref name="sleep" scoped="" ref="0x4045d900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4063f3e0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x4063f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4063f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x406ff670" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x406ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x406ffe68"/>
        <function-ref name="initTimerB" scoped="" ref="0x406ff928"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x406ffa08"/>
        <function-ref name="initTimerA" scoped="" ref="0x406ffae8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x406ff848"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x406ffbc8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x406ffca8"/>
        <function-ref name="initClocks" scoped="" ref="0x406ffd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407d9240" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x407d9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d9418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x406fe408" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x406fe408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x406fe5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x406fed68" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x406fed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x406fe7a0" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x406fe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406fe978"/>
        <function-ref name="taskLoop" scoped="" ref="0x406fea58"/>
        <function-ref name="runNextTask" scoped="" ref="0x406feb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4045a178" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x4045a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4045a350"/>
        <function-ref name="runTask" scoped="" ref="0x4045a430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x404599d8" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x404599d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40459bb0"/>
        <function-ref name="taskLoop" scoped="" ref="0x40459c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x40459d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x406bd590" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x406bd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406bd768"/>
        <function-ref name="runTask" scoped="" ref="0x406bd848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x406caa40" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x406caa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x406cac18"/>
        <function-ref name="irq_postamble" scoped="" ref="0x406cacf8"/>
        <function-ref name="sleep" scoped="" ref="0x406cadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x406becd0" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x406becd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406beea8"/>
        <function-ref name="taskLoop" scoped="" ref="0x406bd010"/>
        <function-ref name="runNextTask" scoped="" ref="0x406bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407e5010" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x407e5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407e51e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407e52c8"/>
        <function-ref name="led1On" scoped="" ref="0x407e53a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407e5488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407e5568"/>
        <function-ref name="get" scoped="" ref="0x407e5648"/>
        <function-ref name="led1Off" scoped="" ref="0x407e5728"/>
        <function-ref name="led2Off" scoped="" ref="0x407e5aa8"/>
        <function-ref name="set" scoped="" ref="0x407e5808"/>
        <function-ref name="led0On" scoped="" ref="0x407e58e8"/>
        <function-ref name="led2On" scoped="" ref="0x407e59c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x408035d0" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x408035d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408037a8"/>
        <function-ref name="isInput" scoped="" ref="0x40803888"/>
        <function-ref name="toggle" scoped="" ref="0x40803968"/>
        <function-ref name="isOutput" scoped="" ref="0x40803a48"/>
        <function-ref name="get" scoped="" ref="0x40803b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40803c08"/>
        <function-ref name="set" scoped="" ref="0x40803ce8"/>
        <function-ref name="clr" scoped="" ref="0x40803dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407f3350" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x407f3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407f3528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407f1010" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x407f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f11e8"/>
        <function-ref name="isInput" scoped="" ref="0x407f12c8"/>
        <function-ref name="toggle" scoped="" ref="0x407f13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407f1488"/>
        <function-ref name="get" scoped="" ref="0x407f1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f1648"/>
        <function-ref name="set" scoped="" ref="0x407f1728"/>
        <function-ref name="clr" scoped="" ref="0x407f1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407f3698" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x407f3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407f3870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407f3950"/>
        <function-ref name="led1On" scoped="" ref="0x407f3a30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407f3b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407f3bf0"/>
        <function-ref name="get" scoped="" ref="0x407f3cd0"/>
        <function-ref name="led1Off" scoped="" ref="0x407f3db0"/>
        <function-ref name="led2Off" scoped="" ref="0x407f21d0"/>
        <function-ref name="set" scoped="" ref="0x407f3e90"/>
        <function-ref name="led0On" scoped="" ref="0x407f2010"/>
        <function-ref name="led2On" scoped="" ref="0x407f20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407f19f8" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x407f19f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f1bd0"/>
        <function-ref name="isInput" scoped="" ref="0x407f1cb0"/>
        <function-ref name="toggle" scoped="" ref="0x407f1d90"/>
        <function-ref name="isOutput" scoped="" ref="0x407f1e70"/>
        <function-ref name="get" scoped="" ref="0x407ef010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ef0f0"/>
        <function-ref name="set" scoped="" ref="0x407ef1d0"/>
        <function-ref name="clr" scoped="" ref="0x407ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407e4418" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x407e4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e45f0"/>
        <function-ref name="isInput" scoped="" ref="0x407e46d0"/>
        <function-ref name="toggle" scoped="" ref="0x407e47b0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e4890"/>
        <function-ref name="get" scoped="" ref="0x407e4970"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e4a50"/>
        <function-ref name="set" scoped="" ref="0x407e4b30"/>
        <function-ref name="clr" scoped="" ref="0x407e4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x407e4e20" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x407e4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40809010"/>
        <function-ref name="isInput" scoped="" ref="0x408090f0"/>
        <function-ref name="toggle" scoped="" ref="0x408091d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408092b0"/>
        <function-ref name="get" scoped="" ref="0x40809390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40809470"/>
        <function-ref name="set" scoped="" ref="0x40809550"/>
        <function-ref name="clr" scoped="" ref="0x40809630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40808280" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40808280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40808458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40809840" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x40809840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40809a18"/>
        <function-ref name="isInput" scoped="" ref="0x40809af8"/>
        <function-ref name="toggle" scoped="" ref="0x40809bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40809cb8"/>
        <function-ref name="get" scoped="" ref="0x40809d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40809e78"/>
        <function-ref name="set" scoped="" ref="0x40808010"/>
        <function-ref name="clr" scoped="" ref="0x408080f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x40812bc8" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x40812bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40812da0"/>
        <function-ref name="isInput" scoped="" ref="0x40812e80"/>
        <function-ref name="setResistor" scoped="" ref="0x40811010"/>
        <function-ref name="toggle" scoped="" ref="0x408110f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408111d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408112b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40811390"/>
        <function-ref name="get" scoped="" ref="0x40811470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40811550"/>
        <function-ref name="getRaw" scoped="" ref="0x40811630"/>
        <function-ref name="set" scoped="" ref="0x40811710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408118d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40811a30"/>
        <function-ref name="clr" scoped="" ref="0x40811b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x4081cd88" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x4081cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081b010"/>
        <function-ref name="isInput" scoped="" ref="0x4081b0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4081b1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4081b2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4081b390"/>
        <function-ref name="getResistor" scoped="" ref="0x4081b470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081b550"/>
        <function-ref name="get" scoped="" ref="0x4081b630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081b710"/>
        <function-ref name="getRaw" scoped="" ref="0x4081b7f0"/>
        <function-ref name="set" scoped="" ref="0x4081b8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081b9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081ba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081bbf0"/>
        <function-ref name="clr" scoped="" ref="0x4081bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x4084bf28" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x4084bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084a110"/>
        <function-ref name="isInput" scoped="" ref="0x4084a1f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4084a2d0"/>
        <function-ref name="toggle" scoped="" ref="0x4084a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084a490"/>
        <function-ref name="getResistor" scoped="" ref="0x4084a570"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084a650"/>
        <function-ref name="get" scoped="" ref="0x4084a730"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084a810"/>
        <function-ref name="getRaw" scoped="" ref="0x4084a8f0"/>
        <function-ref name="set" scoped="" ref="0x4084a9d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084aab0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084ab90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084acf0"/>
        <function-ref name="clr" scoped="" ref="0x4084add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x40866c98" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x40866c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40866e70"/>
        <function-ref name="isInput" scoped="" ref="0x40865010"/>
        <function-ref name="setResistor" scoped="" ref="0x408650f0"/>
        <function-ref name="toggle" scoped="" ref="0x408651d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408652b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40865390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40865470"/>
        <function-ref name="get" scoped="" ref="0x40865550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40865630"/>
        <function-ref name="getRaw" scoped="" ref="0x40865710"/>
        <function-ref name="set" scoped="" ref="0x408657f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408658d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408659b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40865b10"/>
        <function-ref name="clr" scoped="" ref="0x40865bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x40849068" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x40849068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40849240"/>
        <function-ref name="isInput" scoped="" ref="0x40849320"/>
        <function-ref name="setResistor" scoped="" ref="0x40849400"/>
        <function-ref name="toggle" scoped="" ref="0x408494e0"/>
        <function-ref name="isOutput" scoped="" ref="0x408495c0"/>
        <function-ref name="getResistor" scoped="" ref="0x408496a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40849780"/>
        <function-ref name="get" scoped="" ref="0x40849860"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40849940"/>
        <function-ref name="getRaw" scoped="" ref="0x40849a20"/>
        <function-ref name="set" scoped="" ref="0x40849b00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40849be0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40849cc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40849e20"/>
        <function-ref name="clr" scoped="" ref="0x40849f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x4082f178" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x4082f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082f350"/>
        <function-ref name="isInput" scoped="" ref="0x4082f430"/>
        <function-ref name="setResistor" scoped="" ref="0x4082f510"/>
        <function-ref name="toggle" scoped="" ref="0x4082f5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4082f6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4082f7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082f890"/>
        <function-ref name="get" scoped="" ref="0x4082f970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4082fa50"/>
        <function-ref name="getRaw" scoped="" ref="0x4082fb30"/>
        <function-ref name="set" scoped="" ref="0x4082fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4082fcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4082fdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4082e010"/>
        <function-ref name="clr" scoped="" ref="0x4082e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x4083a3e8" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x4083a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083a5c0"/>
        <function-ref name="isInput" scoped="" ref="0x4083a6a0"/>
        <function-ref name="setResistor" scoped="" ref="0x4083a780"/>
        <function-ref name="toggle" scoped="" ref="0x4083a860"/>
        <function-ref name="isOutput" scoped="" ref="0x4083a940"/>
        <function-ref name="getResistor" scoped="" ref="0x4083aa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083ab00"/>
        <function-ref name="get" scoped="" ref="0x4083abe0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083acc0"/>
        <function-ref name="getRaw" scoped="" ref="0x4083ada0"/>
        <function-ref name="set" scoped="" ref="0x4083ae80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40839010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408390f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40839250"/>
        <function-ref name="clr" scoped="" ref="0x40839330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x408454c8" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x408454c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408456a0"/>
        <function-ref name="isInput" scoped="" ref="0x40845780"/>
        <function-ref name="setResistor" scoped="" ref="0x40845860"/>
        <function-ref name="toggle" scoped="" ref="0x40845940"/>
        <function-ref name="isOutput" scoped="" ref="0x40845a20"/>
        <function-ref name="getResistor" scoped="" ref="0x40845b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40845be0"/>
        <function-ref name="get" scoped="" ref="0x40845cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40845da0"/>
        <function-ref name="getRaw" scoped="" ref="0x40845e80"/>
        <function-ref name="set" scoped="" ref="0x40844010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408440f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408441d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40844330"/>
        <function-ref name="clr" scoped="" ref="0x40844410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x4083c368" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x4083c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083c540"/>
        <function-ref name="isInput" scoped="" ref="0x4083c620"/>
        <function-ref name="setResistor" scoped="" ref="0x4083c700"/>
        <function-ref name="toggle" scoped="" ref="0x4083c7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4083c8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x4083c9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083ca80"/>
        <function-ref name="get" scoped="" ref="0x4083cb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083cc40"/>
        <function-ref name="getRaw" scoped="" ref="0x4083cd20"/>
        <function-ref name="set" scoped="" ref="0x4083ce00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083cee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40851010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40851170"/>
        <function-ref name="clr" scoped="" ref="0x40851250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x4085d4c0" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x4085d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085d698"/>
        <function-ref name="isInput" scoped="" ref="0x4085d778"/>
        <function-ref name="setResistor" scoped="" ref="0x4085d858"/>
        <function-ref name="toggle" scoped="" ref="0x4085d938"/>
        <function-ref name="isOutput" scoped="" ref="0x4085da18"/>
        <function-ref name="getResistor" scoped="" ref="0x4085daf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085dbd8"/>
        <function-ref name="get" scoped="" ref="0x4085dcb8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4085dd98"/>
        <function-ref name="getRaw" scoped="" ref="0x4085de78"/>
        <function-ref name="set" scoped="" ref="0x4085c010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4085c0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085c1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085c330"/>
        <function-ref name="clr" scoped="" ref="0x4085c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x40854280" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x40854280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40854458"/>
        <function-ref name="isInput" scoped="" ref="0x40854538"/>
        <function-ref name="setResistor" scoped="" ref="0x40854618"/>
        <function-ref name="toggle" scoped="" ref="0x408546f8"/>
        <function-ref name="isOutput" scoped="" ref="0x408547d8"/>
        <function-ref name="getResistor" scoped="" ref="0x408548b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40854998"/>
        <function-ref name="get" scoped="" ref="0x40854a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40854b58"/>
        <function-ref name="getRaw" scoped="" ref="0x40854c38"/>
        <function-ref name="set" scoped="" ref="0x40854d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40854df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40854ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40853090"/>
        <function-ref name="clr" scoped="" ref="0x40853170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x40861288" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x40861288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40861460"/>
        <function-ref name="isInput" scoped="" ref="0x40861540"/>
        <function-ref name="setResistor" scoped="" ref="0x40861620"/>
        <function-ref name="toggle" scoped="" ref="0x40861700"/>
        <function-ref name="isOutput" scoped="" ref="0x408617e0"/>
        <function-ref name="getResistor" scoped="" ref="0x408618c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408619a0"/>
        <function-ref name="get" scoped="" ref="0x40861a80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40861b60"/>
        <function-ref name="getRaw" scoped="" ref="0x40861c40"/>
        <function-ref name="set" scoped="" ref="0x40861d20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40861e00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40861ee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40860090"/>
        <function-ref name="clr" scoped="" ref="0x40860170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x40824178" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x40824178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40824350"/>
        <function-ref name="isInput" scoped="" ref="0x40824430"/>
        <function-ref name="setResistor" scoped="" ref="0x40824510"/>
        <function-ref name="toggle" scoped="" ref="0x408245f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408246d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408247b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40824890"/>
        <function-ref name="get" scoped="" ref="0x40824970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40824a50"/>
        <function-ref name="getRaw" scoped="" ref="0x40824b30"/>
        <function-ref name="set" scoped="" ref="0x40824c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40824cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40824dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40823010"/>
        <function-ref name="clr" scoped="" ref="0x408230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x4085c680" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x4085c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085c858"/>
        <function-ref name="isInput" scoped="" ref="0x4085c938"/>
        <function-ref name="setResistor" scoped="" ref="0x4085ca18"/>
        <function-ref name="toggle" scoped="" ref="0x4085caf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4085cbd8"/>
        <function-ref name="getResistor" scoped="" ref="0x4085ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085cd98"/>
        <function-ref name="get" scoped="" ref="0x4085ce78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4085b010"/>
        <function-ref name="getRaw" scoped="" ref="0x4085b0f0"/>
        <function-ref name="set" scoped="" ref="0x4085b1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4085b2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085b390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085b4f0"/>
        <function-ref name="clr" scoped="" ref="0x4085b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x408224c8" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x408224c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408226a0"/>
        <function-ref name="isInput" scoped="" ref="0x40822780"/>
        <function-ref name="setResistor" scoped="" ref="0x40822860"/>
        <function-ref name="toggle" scoped="" ref="0x40822940"/>
        <function-ref name="isOutput" scoped="" ref="0x40822a20"/>
        <function-ref name="getResistor" scoped="" ref="0x40822b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40822be0"/>
        <function-ref name="get" scoped="" ref="0x40822cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40822da0"/>
        <function-ref name="getRaw" scoped="" ref="0x40822e80"/>
        <function-ref name="set" scoped="" ref="0x40820010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408200f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408201d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40820330"/>
        <function-ref name="clr" scoped="" ref="0x40820410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x4082c688" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x4082c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082c860"/>
        <function-ref name="isInput" scoped="" ref="0x4082c940"/>
        <function-ref name="setResistor" scoped="" ref="0x4082ca20"/>
        <function-ref name="toggle" scoped="" ref="0x4082cb00"/>
        <function-ref name="isOutput" scoped="" ref="0x4082cbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x4082ccc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082cda0"/>
        <function-ref name="get" scoped="" ref="0x4082ce80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4082b010"/>
        <function-ref name="getRaw" scoped="" ref="0x4082b0f0"/>
        <function-ref name="set" scoped="" ref="0x4082b1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4082b2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4082b390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4082b4f0"/>
        <function-ref name="clr" scoped="" ref="0x4082b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x40837928" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x40837928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40837b00"/>
        <function-ref name="isInput" scoped="" ref="0x40837be0"/>
        <function-ref name="setResistor" scoped="" ref="0x40837cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40837da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40837e80"/>
        <function-ref name="getResistor" scoped="" ref="0x40836010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408360f0"/>
        <function-ref name="get" scoped="" ref="0x408361d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408362b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40836390"/>
        <function-ref name="set" scoped="" ref="0x40836470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40836550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40836630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40836790"/>
        <function-ref name="clr" scoped="" ref="0x40836870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x40842a08" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x40842a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40842be0"/>
        <function-ref name="isInput" scoped="" ref="0x40842cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x40842da0"/>
        <function-ref name="toggle" scoped="" ref="0x40842e80"/>
        <function-ref name="isOutput" scoped="" ref="0x40841010"/>
        <function-ref name="getResistor" scoped="" ref="0x408410f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408411d0"/>
        <function-ref name="get" scoped="" ref="0x408412b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40841390"/>
        <function-ref name="getRaw" scoped="" ref="0x40841470"/>
        <function-ref name="set" scoped="" ref="0x40841550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40841630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40841710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40841870"/>
        <function-ref name="clr" scoped="" ref="0x40841950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x4084f848" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x4084f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084fa20"/>
        <function-ref name="isInput" scoped="" ref="0x4084fb00"/>
        <function-ref name="setResistor" scoped="" ref="0x4084fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x4084fcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x4084fe80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084e010"/>
        <function-ref name="get" scoped="" ref="0x4084e0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084e1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4084e2b0"/>
        <function-ref name="set" scoped="" ref="0x4084e390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084e470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084e550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084e6b0"/>
        <function-ref name="clr" scoped="" ref="0x4084e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x4081a848" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x4081a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081aa20"/>
        <function-ref name="isInput" scoped="" ref="0x4081ab00"/>
        <function-ref name="setResistor" scoped="" ref="0x4081abe0"/>
        <function-ref name="toggle" scoped="" ref="0x4081acc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4081ada0"/>
        <function-ref name="getResistor" scoped="" ref="0x4081ae80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40813010"/>
        <function-ref name="get" scoped="" ref="0x408130f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408131d0"/>
        <function-ref name="getRaw" scoped="" ref="0x408132b0"/>
        <function-ref name="set" scoped="" ref="0x40813390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40813470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40813550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408136b0"/>
        <function-ref name="clr" scoped="" ref="0x40813790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x4081ea08" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x4081ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4081ed40"/>
        <function-ref name="setResistor" scoped="" ref="0x4081ee20"/>
        <function-ref name="toggle" scoped="" ref="0x4081ef00"/>
        <function-ref name="isOutput" scoped="" ref="0x4081d010"/>
        <function-ref name="getResistor" scoped="" ref="0x4081d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081d1d0"/>
        <function-ref name="get" scoped="" ref="0x4081d2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081d390"/>
        <function-ref name="getRaw" scoped="" ref="0x4081d470"/>
        <function-ref name="set" scoped="" ref="0x4081d550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081d630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081d710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081d870"/>
        <function-ref name="clr" scoped="" ref="0x4081d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x40829bc8" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x40829bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40829da0"/>
        <function-ref name="isInput" scoped="" ref="0x40829e80"/>
        <function-ref name="setResistor" scoped="" ref="0x40828010"/>
        <function-ref name="toggle" scoped="" ref="0x408280f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408281d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408282b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40828390"/>
        <function-ref name="get" scoped="" ref="0x40828470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40828550"/>
        <function-ref name="getRaw" scoped="" ref="0x40828630"/>
        <function-ref name="set" scoped="" ref="0x40828710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408288d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40828a30"/>
        <function-ref name="clr" scoped="" ref="0x40828b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x4084cd80" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x4084cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084b010"/>
        <function-ref name="isInput" scoped="" ref="0x4084b0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4084b1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4084b2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084b390"/>
        <function-ref name="getResistor" scoped="" ref="0x4084b470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084b550"/>
        <function-ref name="get" scoped="" ref="0x4084b630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084b710"/>
        <function-ref name="getRaw" scoped="" ref="0x4084b7f0"/>
        <function-ref name="set" scoped="" ref="0x4084b8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084b9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084ba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084bbf0"/>
        <function-ref name="clr" scoped="" ref="0x4084bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x40869758" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x40869758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40869930"/>
        <function-ref name="isInput" scoped="" ref="0x40869a10"/>
        <function-ref name="setResistor" scoped="" ref="0x40869af0"/>
        <function-ref name="toggle" scoped="" ref="0x40869bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40869cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x40869d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40869e70"/>
        <function-ref name="get" scoped="" ref="0x40868010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408680f0"/>
        <function-ref name="getRaw" scoped="" ref="0x408681d0"/>
        <function-ref name="set" scoped="" ref="0x408682b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40868390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40868470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408685d0"/>
        <function-ref name="clr" scoped="" ref="0x408686b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x40862168" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x40862168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40862340"/>
        <function-ref name="isInput" scoped="" ref="0x40862420"/>
        <function-ref name="setResistor" scoped="" ref="0x40862500"/>
        <function-ref name="toggle" scoped="" ref="0x408625e0"/>
        <function-ref name="isOutput" scoped="" ref="0x408626c0"/>
        <function-ref name="getResistor" scoped="" ref="0x408627a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40862880"/>
        <function-ref name="get" scoped="" ref="0x40862960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40862a40"/>
        <function-ref name="getRaw" scoped="" ref="0x40862b20"/>
        <function-ref name="set" scoped="" ref="0x40862c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40862ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40862dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40862f20"/>
        <function-ref name="clr" scoped="" ref="0x40861018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x40858d80" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x40858d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40857010"/>
        <function-ref name="isInput" scoped="" ref="0x408570f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408571d0"/>
        <function-ref name="toggle" scoped="" ref="0x408572b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40857390"/>
        <function-ref name="getResistor" scoped="" ref="0x40857470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40857550"/>
        <function-ref name="get" scoped="" ref="0x40857630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40857710"/>
        <function-ref name="getRaw" scoped="" ref="0x408577f0"/>
        <function-ref name="set" scoped="" ref="0x408578d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408579b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40857a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40857bf0"/>
        <function-ref name="clr" scoped="" ref="0x40857cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x40826010" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x40826010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408262e8"/>
        <function-ref name="isInput" scoped="" ref="0x408263c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408264a8"/>
        <function-ref name="toggle" scoped="" ref="0x40826588"/>
        <function-ref name="isOutput" scoped="" ref="0x40826668"/>
        <function-ref name="getResistor" scoped="" ref="0x40826748"/>
        <function-ref name="makeOutput" scoped="" ref="0x40826828"/>
        <function-ref name="get" scoped="" ref="0x40826908"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408269e8"/>
        <function-ref name="getRaw" scoped="" ref="0x40826ac8"/>
        <function-ref name="set" scoped="" ref="0x40826ba8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40826c88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40826d68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40826ec8"/>
        <function-ref name="clr" scoped="" ref="0x4083b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x40831178" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x40831178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40831350"/>
        <function-ref name="isInput" scoped="" ref="0x40831430"/>
        <function-ref name="setResistor" scoped="" ref="0x40831510"/>
        <function-ref name="toggle" scoped="" ref="0x408315f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408316d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408317b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40831890"/>
        <function-ref name="get" scoped="" ref="0x40831970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40831a50"/>
        <function-ref name="getRaw" scoped="" ref="0x40831b30"/>
        <function-ref name="set" scoped="" ref="0x40831c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40831cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40831dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40846010"/>
        <function-ref name="clr" scoped="" ref="0x408460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x4083e010" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x4083e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4083e2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x4083e3a8"/>
        <function-ref name="toggle" scoped="" ref="0x4083e488"/>
        <function-ref name="isOutput" scoped="" ref="0x4083e568"/>
        <function-ref name="getResistor" scoped="" ref="0x4083e648"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083e728"/>
        <function-ref name="get" scoped="" ref="0x4083e808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083e8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x4083e9c8"/>
        <function-ref name="set" scoped="" ref="0x4083eaa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083eb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083ec68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083edc8"/>
        <function-ref name="clr" scoped="" ref="0x4083eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x40868918" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x40868918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40868af0"/>
        <function-ref name="isInput" scoped="" ref="0x40868bd0"/>
        <function-ref name="setResistor" scoped="" ref="0x40868cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40868d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40868e70"/>
        <function-ref name="getResistor" scoped="" ref="0x40867010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408670f0"/>
        <function-ref name="get" scoped="" ref="0x408671d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408672b0"/>
        <function-ref name="getRaw" scoped="" ref="0x40867390"/>
        <function-ref name="set" scoped="" ref="0x40867470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40867550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40867630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40867790"/>
        <function-ref name="clr" scoped="" ref="0x40867870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x4085b838" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x4085b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085ba10"/>
        <function-ref name="isInput" scoped="" ref="0x4085baf0"/>
        <function-ref name="setResistor" scoped="" ref="0x4085bbd0"/>
        <function-ref name="toggle" scoped="" ref="0x4085bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4085bd90"/>
        <function-ref name="getResistor" scoped="" ref="0x4085be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085a010"/>
        <function-ref name="get" scoped="" ref="0x4085a0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4085a1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4085a2b0"/>
        <function-ref name="set" scoped="" ref="0x4085a390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4085a470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085a550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085a6b0"/>
        <function-ref name="clr" scoped="" ref="0x4085a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x40811d88" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x40811d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40810010"/>
        <function-ref name="isInput" scoped="" ref="0x408100f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408101d0"/>
        <function-ref name="toggle" scoped="" ref="0x408102b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40810390"/>
        <function-ref name="getResistor" scoped="" ref="0x40810470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40810550"/>
        <function-ref name="get" scoped="" ref="0x40810630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40810710"/>
        <function-ref name="getRaw" scoped="" ref="0x408107f0"/>
        <function-ref name="set" scoped="" ref="0x408108d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408109b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40810a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40810bf0"/>
        <function-ref name="clr" scoped="" ref="0x40810cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x40830010" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x40830010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408301e8"/>
        <function-ref name="isInput" scoped="" ref="0x408302c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408303a8"/>
        <function-ref name="toggle" scoped="" ref="0x40830488"/>
        <function-ref name="isOutput" scoped="" ref="0x40830568"/>
        <function-ref name="getResistor" scoped="" ref="0x40830648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40830728"/>
        <function-ref name="get" scoped="" ref="0x40830808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408308e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408309c8"/>
        <function-ref name="set" scoped="" ref="0x40830aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40830b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40830c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40830dc8"/>
        <function-ref name="clr" scoped="" ref="0x40830ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x40841bc8" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x40841bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40841da0"/>
        <function-ref name="isInput" scoped="" ref="0x40841e80"/>
        <function-ref name="setResistor" scoped="" ref="0x40840010"/>
        <function-ref name="toggle" scoped="" ref="0x408400f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408401d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408402b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40840390"/>
        <function-ref name="get" scoped="" ref="0x40840470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40840550"/>
        <function-ref name="getRaw" scoped="" ref="0x40840630"/>
        <function-ref name="set" scoped="" ref="0x40840710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408408d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40840a30"/>
        <function-ref name="clr" scoped="" ref="0x40840b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x4082e368" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x4082e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082e540"/>
        <function-ref name="isInput" scoped="" ref="0x4082e620"/>
        <function-ref name="setResistor" scoped="" ref="0x4082e700"/>
        <function-ref name="toggle" scoped="" ref="0x4082e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4082e8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x4082e9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082ea80"/>
        <function-ref name="get" scoped="" ref="0x4082eb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4082ec40"/>
        <function-ref name="getRaw" scoped="" ref="0x4082ed20"/>
        <function-ref name="set" scoped="" ref="0x4082ee00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4082eee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4082d010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4082d170"/>
        <function-ref name="clr" scoped="" ref="0x4082d250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x408395a8" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x408395a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40839780"/>
        <function-ref name="isInput" scoped="" ref="0x40839860"/>
        <function-ref name="setResistor" scoped="" ref="0x40839940"/>
        <function-ref name="toggle" scoped="" ref="0x40839a20"/>
        <function-ref name="isOutput" scoped="" ref="0x40839b00"/>
        <function-ref name="getResistor" scoped="" ref="0x40839be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40839cc0"/>
        <function-ref name="get" scoped="" ref="0x40839da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40839e80"/>
        <function-ref name="getRaw" scoped="" ref="0x40838010"/>
        <function-ref name="set" scoped="" ref="0x408380f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408381d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408382b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40838410"/>
        <function-ref name="clr" scoped="" ref="0x408384f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x40844688" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x40844688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40844860"/>
        <function-ref name="isInput" scoped="" ref="0x40844940"/>
        <function-ref name="setResistor" scoped="" ref="0x40844a20"/>
        <function-ref name="toggle" scoped="" ref="0x40844b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40844be0"/>
        <function-ref name="getResistor" scoped="" ref="0x40844cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40844da0"/>
        <function-ref name="get" scoped="" ref="0x40844e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40843010"/>
        <function-ref name="getRaw" scoped="" ref="0x408430f0"/>
        <function-ref name="set" scoped="" ref="0x408431d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408432b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40843390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408434f0"/>
        <function-ref name="clr" scoped="" ref="0x408435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x408514c8" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x408514c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408516a0"/>
        <function-ref name="isInput" scoped="" ref="0x40851780"/>
        <function-ref name="setResistor" scoped="" ref="0x40851860"/>
        <function-ref name="toggle" scoped="" ref="0x40851940"/>
        <function-ref name="isOutput" scoped="" ref="0x40851a20"/>
        <function-ref name="getResistor" scoped="" ref="0x40851b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40851be0"/>
        <function-ref name="get" scoped="" ref="0x40851cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40851da0"/>
        <function-ref name="getRaw" scoped="" ref="0x40851e80"/>
        <function-ref name="set" scoped="" ref="0x40850010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408500f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408501d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40850330"/>
        <function-ref name="clr" scoped="" ref="0x40850410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x40859bc0" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x40859bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40859d98"/>
        <function-ref name="isInput" scoped="" ref="0x40859e78"/>
        <function-ref name="setResistor" scoped="" ref="0x40858010"/>
        <function-ref name="toggle" scoped="" ref="0x408580f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408581d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408582b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40858390"/>
        <function-ref name="get" scoped="" ref="0x40858470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40858550"/>
        <function-ref name="getRaw" scoped="" ref="0x40858630"/>
        <function-ref name="set" scoped="" ref="0x40858710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408587f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408588d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40858a30"/>
        <function-ref name="clr" scoped="" ref="0x40858b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x40814558" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x40814558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40814730"/>
        <function-ref name="isInput" scoped="" ref="0x40814810"/>
        <function-ref name="setResistor" scoped="" ref="0x408148f0"/>
        <function-ref name="toggle" scoped="" ref="0x408149d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40814ab0"/>
        <function-ref name="getResistor" scoped="" ref="0x40814b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40814c70"/>
        <function-ref name="get" scoped="" ref="0x40814d50"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40814e30"/>
        <function-ref name="getRaw" scoped="" ref="0x40814f10"/>
        <function-ref name="set" scoped="" ref="0x40805010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408050f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408051d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40805330"/>
        <function-ref name="clr" scoped="" ref="0x40805410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x40820688" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x40820688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40820860"/>
        <function-ref name="isInput" scoped="" ref="0x40820940"/>
        <function-ref name="setResistor" scoped="" ref="0x40820a20"/>
        <function-ref name="toggle" scoped="" ref="0x40820b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40820be0"/>
        <function-ref name="getResistor" scoped="" ref="0x40820cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40820da0"/>
        <function-ref name="get" scoped="" ref="0x40820e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081f010"/>
        <function-ref name="getRaw" scoped="" ref="0x4081f0f0"/>
        <function-ref name="set" scoped="" ref="0x4081f1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081f2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081f390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081f4f0"/>
        <function-ref name="clr" scoped="" ref="0x4081f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x4082b848" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x4082b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082ba20"/>
        <function-ref name="isInput" scoped="" ref="0x4082bb00"/>
        <function-ref name="setResistor" scoped="" ref="0x4082bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x4082bcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4082bda0"/>
        <function-ref name="getResistor" scoped="" ref="0x4082be80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082a010"/>
        <function-ref name="get" scoped="" ref="0x4082a0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4082a1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4082a2b0"/>
        <function-ref name="set" scoped="" ref="0x4082a390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4082a470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4082a550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4082a6b0"/>
        <function-ref name="clr" scoped="" ref="0x4082a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x40836ae8" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x40836ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40836cc0"/>
        <function-ref name="isInput" scoped="" ref="0x40836da0"/>
        <function-ref name="setResistor" scoped="" ref="0x40836e80"/>
        <function-ref name="toggle" scoped="" ref="0x40835010"/>
        <function-ref name="isOutput" scoped="" ref="0x408350f0"/>
        <function-ref name="getResistor" scoped="" ref="0x408351d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408352b0"/>
        <function-ref name="get" scoped="" ref="0x40835390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40835470"/>
        <function-ref name="getRaw" scoped="" ref="0x40835550"/>
        <function-ref name="set" scoped="" ref="0x40835630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40835710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40835950"/>
        <function-ref name="clr" scoped="" ref="0x40835a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x40856010" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x40856010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408561e8"/>
        <function-ref name="isInput" scoped="" ref="0x408562c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408563a8"/>
        <function-ref name="toggle" scoped="" ref="0x40856488"/>
        <function-ref name="isOutput" scoped="" ref="0x40856568"/>
        <function-ref name="getResistor" scoped="" ref="0x40856648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40856728"/>
        <function-ref name="get" scoped="" ref="0x40856808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408568e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408569c8"/>
        <function-ref name="set" scoped="" ref="0x40856aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40856b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40856c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40856dc8"/>
        <function-ref name="clr" scoped="" ref="0x40856ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x408533d8" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x408533d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408535b0"/>
        <function-ref name="isInput" scoped="" ref="0x40853690"/>
        <function-ref name="setResistor" scoped="" ref="0x40853770"/>
        <function-ref name="toggle" scoped="" ref="0x40853850"/>
        <function-ref name="isOutput" scoped="" ref="0x40853930"/>
        <function-ref name="getResistor" scoped="" ref="0x40853a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40853af0"/>
        <function-ref name="get" scoped="" ref="0x40853bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40853cb0"/>
        <function-ref name="getRaw" scoped="" ref="0x40853d90"/>
        <function-ref name="set" scoped="" ref="0x40853e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40852010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408520f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40852250"/>
        <function-ref name="clr" scoped="" ref="0x40852330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x40865e58" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x40865e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40864050"/>
        <function-ref name="isInput" scoped="" ref="0x40864130"/>
        <function-ref name="setResistor" scoped="" ref="0x40864210"/>
        <function-ref name="toggle" scoped="" ref="0x408642f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408643d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408644b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40864590"/>
        <function-ref name="get" scoped="" ref="0x40864670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40864750"/>
        <function-ref name="getRaw" scoped="" ref="0x40864830"/>
        <function-ref name="set" scoped="" ref="0x40864910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408649f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40864ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40864c30"/>
        <function-ref name="clr" scoped="" ref="0x40864d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x40834e68" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x40834e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40833050"/>
        <function-ref name="isInput" scoped="" ref="0x40833130"/>
        <function-ref name="setResistor" scoped="" ref="0x40833210"/>
        <function-ref name="toggle" scoped="" ref="0x408332f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408333d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408334b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40833590"/>
        <function-ref name="get" scoped="" ref="0x40833670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40833750"/>
        <function-ref name="getRaw" scoped="" ref="0x40833830"/>
        <function-ref name="set" scoped="" ref="0x40833910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408339f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40833ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40833c30"/>
        <function-ref name="clr" scoped="" ref="0x40833d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x40855170" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x40855170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40855348"/>
        <function-ref name="isInput" scoped="" ref="0x40855428"/>
        <function-ref name="setResistor" scoped="" ref="0x40855508"/>
        <function-ref name="toggle" scoped="" ref="0x408555e8"/>
        <function-ref name="isOutput" scoped="" ref="0x408556c8"/>
        <function-ref name="getResistor" scoped="" ref="0x408557a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40855888"/>
        <function-ref name="get" scoped="" ref="0x40855968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40855a48"/>
        <function-ref name="getRaw" scoped="" ref="0x40855b28"/>
        <function-ref name="set" scoped="" ref="0x40855c08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40855ce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40855dc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40855f28"/>
        <function-ref name="clr" scoped="" ref="0x40854018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x40813a08" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x40813a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40813be0"/>
        <function-ref name="isInput" scoped="" ref="0x40813cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x40813da0"/>
        <function-ref name="toggle" scoped="" ref="0x40813e80"/>
        <function-ref name="isOutput" scoped="" ref="0x40812010"/>
        <function-ref name="getResistor" scoped="" ref="0x408120f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408121d0"/>
        <function-ref name="get" scoped="" ref="0x408122b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40812390"/>
        <function-ref name="getRaw" scoped="" ref="0x40812470"/>
        <function-ref name="set" scoped="" ref="0x40812550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40812630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40812710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40812870"/>
        <function-ref name="clr" scoped="" ref="0x40812950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x4081dbc8" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x4081dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081dda0"/>
        <function-ref name="isInput" scoped="" ref="0x4081de80"/>
        <function-ref name="setResistor" scoped="" ref="0x4081c010"/>
        <function-ref name="toggle" scoped="" ref="0x4081c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4081c1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4081c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081c390"/>
        <function-ref name="get" scoped="" ref="0x4081c470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081c550"/>
        <function-ref name="getRaw" scoped="" ref="0x4081c630"/>
        <function-ref name="set" scoped="" ref="0x4081c710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081c8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081ca30"/>
        <function-ref name="clr" scoped="" ref="0x4081cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x40828d88" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x40828d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40827010"/>
        <function-ref name="isInput" scoped="" ref="0x408270f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408271d0"/>
        <function-ref name="toggle" scoped="" ref="0x408272b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40827390"/>
        <function-ref name="getResistor" scoped="" ref="0x40827470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40827550"/>
        <function-ref name="get" scoped="" ref="0x40827630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40827710"/>
        <function-ref name="getRaw" scoped="" ref="0x408277f0"/>
        <function-ref name="set" scoped="" ref="0x408278d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408279b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40827a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40827bf0"/>
        <function-ref name="clr" scoped="" ref="0x40827cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x4085aa00" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x4085aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085abd8"/>
        <function-ref name="isInput" scoped="" ref="0x4085acb8"/>
        <function-ref name="setResistor" scoped="" ref="0x4085ad98"/>
        <function-ref name="toggle" scoped="" ref="0x4085ae78"/>
        <function-ref name="isOutput" scoped="" ref="0x40859010"/>
        <function-ref name="getResistor" scoped="" ref="0x408590f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408591d0"/>
        <function-ref name="get" scoped="" ref="0x408592b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40859390"/>
        <function-ref name="getRaw" scoped="" ref="0x40859470"/>
        <function-ref name="set" scoped="" ref="0x40859550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40859630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40859710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40859870"/>
        <function-ref name="clr" scoped="" ref="0x40859950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x40867ad8" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x40867ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40867cb0"/>
        <function-ref name="isInput" scoped="" ref="0x40867d90"/>
        <function-ref name="setResistor" scoped="" ref="0x40867e70"/>
        <function-ref name="toggle" scoped="" ref="0x40866010"/>
        <function-ref name="isOutput" scoped="" ref="0x408660f0"/>
        <function-ref name="getResistor" scoped="" ref="0x408661d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408662b0"/>
        <function-ref name="get" scoped="" ref="0x40866390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40866470"/>
        <function-ref name="getRaw" scoped="" ref="0x40866550"/>
        <function-ref name="set" scoped="" ref="0x40866630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40866710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40866950"/>
        <function-ref name="clr" scoped="" ref="0x40866a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x4083b288" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x4083b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083b460"/>
        <function-ref name="isInput" scoped="" ref="0x4083b540"/>
        <function-ref name="setResistor" scoped="" ref="0x4083b620"/>
        <function-ref name="toggle" scoped="" ref="0x4083b700"/>
        <function-ref name="isOutput" scoped="" ref="0x4083b7e0"/>
        <function-ref name="getResistor" scoped="" ref="0x4083b8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083b9a0"/>
        <function-ref name="get" scoped="" ref="0x4083ba80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083bb60"/>
        <function-ref name="getRaw" scoped="" ref="0x4083bc40"/>
        <function-ref name="set" scoped="" ref="0x4083bd20"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083be00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083bee0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083a090"/>
        <function-ref name="clr" scoped="" ref="0x4083a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x40846368" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x40846368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40846540"/>
        <function-ref name="isInput" scoped="" ref="0x40846620"/>
        <function-ref name="setResistor" scoped="" ref="0x40846700"/>
        <function-ref name="toggle" scoped="" ref="0x408467e0"/>
        <function-ref name="isOutput" scoped="" ref="0x408468c0"/>
        <function-ref name="getResistor" scoped="" ref="0x408469a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40846a80"/>
        <function-ref name="get" scoped="" ref="0x40846b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40846c40"/>
        <function-ref name="getRaw" scoped="" ref="0x40846d20"/>
        <function-ref name="set" scoped="" ref="0x40846e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40846ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40845010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40845170"/>
        <function-ref name="clr" scoped="" ref="0x40845250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x4083d178" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x4083d178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083d350"/>
        <function-ref name="isInput" scoped="" ref="0x4083d430"/>
        <function-ref name="setResistor" scoped="" ref="0x4083d510"/>
        <function-ref name="toggle" scoped="" ref="0x4083d5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4083d6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4083d7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083d890"/>
        <function-ref name="get" scoped="" ref="0x4083d970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083da50"/>
        <function-ref name="getRaw" scoped="" ref="0x4083db30"/>
        <function-ref name="set" scoped="" ref="0x4083dc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083dcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083ddd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083c010"/>
        <function-ref name="clr" scoped="" ref="0x4083c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x40825010" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x40825010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408251e8"/>
        <function-ref name="isInput" scoped="" ref="0x408252c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408253a8"/>
        <function-ref name="toggle" scoped="" ref="0x40825488"/>
        <function-ref name="isOutput" scoped="" ref="0x40825568"/>
        <function-ref name="getResistor" scoped="" ref="0x40825648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40825728"/>
        <function-ref name="get" scoped="" ref="0x40825808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408258e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408259c8"/>
        <function-ref name="set" scoped="" ref="0x40825aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40825b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40825c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40825dc8"/>
        <function-ref name="clr" scoped="" ref="0x40825ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x40840d88" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x40840d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083f010"/>
        <function-ref name="isInput" scoped="" ref="0x4083f0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4083f1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4083f2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4083f390"/>
        <function-ref name="getResistor" scoped="" ref="0x4083f470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083f550"/>
        <function-ref name="get" scoped="" ref="0x4083f630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4083f710"/>
        <function-ref name="getRaw" scoped="" ref="0x4083f7f0"/>
        <function-ref name="set" scoped="" ref="0x4083f8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4083f9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4083fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4083fbf0"/>
        <function-ref name="clr" scoped="" ref="0x4083fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x40823368" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x40823368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40823540"/>
        <function-ref name="isInput" scoped="" ref="0x40823620"/>
        <function-ref name="setResistor" scoped="" ref="0x40823700"/>
        <function-ref name="toggle" scoped="" ref="0x408237e0"/>
        <function-ref name="isOutput" scoped="" ref="0x408238c0"/>
        <function-ref name="getResistor" scoped="" ref="0x408239a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40823a80"/>
        <function-ref name="get" scoped="" ref="0x40823b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40823c40"/>
        <function-ref name="getRaw" scoped="" ref="0x40823d20"/>
        <function-ref name="set" scoped="" ref="0x40823e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40823ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40822010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40822170"/>
        <function-ref name="clr" scoped="" ref="0x40822250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x4082d4c8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x4082d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082d6a0"/>
        <function-ref name="isInput" scoped="" ref="0x4082d780"/>
        <function-ref name="setResistor" scoped="" ref="0x4082d860"/>
        <function-ref name="toggle" scoped="" ref="0x4082d940"/>
        <function-ref name="isOutput" scoped="" ref="0x4082da20"/>
        <function-ref name="getResistor" scoped="" ref="0x4082db00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082dbe0"/>
        <function-ref name="get" scoped="" ref="0x4082dcc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4082dda0"/>
        <function-ref name="getRaw" scoped="" ref="0x4082de80"/>
        <function-ref name="set" scoped="" ref="0x4082c010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4082c0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4082c1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4082c330"/>
        <function-ref name="clr" scoped="" ref="0x4082c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x40838768" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x40838768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40838940"/>
        <function-ref name="isInput" scoped="" ref="0x40838a20"/>
        <function-ref name="setResistor" scoped="" ref="0x40838b00"/>
        <function-ref name="toggle" scoped="" ref="0x40838be0"/>
        <function-ref name="isOutput" scoped="" ref="0x40838cc0"/>
        <function-ref name="getResistor" scoped="" ref="0x40838da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40838e80"/>
        <function-ref name="get" scoped="" ref="0x40837010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408370f0"/>
        <function-ref name="getRaw" scoped="" ref="0x408371d0"/>
        <function-ref name="set" scoped="" ref="0x408372b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40837390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40837470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408375d0"/>
        <function-ref name="clr" scoped="" ref="0x408376b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x40843848" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x40843848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40843a20"/>
        <function-ref name="isInput" scoped="" ref="0x40843b00"/>
        <function-ref name="setResistor" scoped="" ref="0x40843be0"/>
        <function-ref name="toggle" scoped="" ref="0x40843cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40843da0"/>
        <function-ref name="getResistor" scoped="" ref="0x40843e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40842010"/>
        <function-ref name="get" scoped="" ref="0x408420f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408421d0"/>
        <function-ref name="getRaw" scoped="" ref="0x408422b0"/>
        <function-ref name="set" scoped="" ref="0x40842390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40842470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40842550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408426b0"/>
        <function-ref name="clr" scoped="" ref="0x40842790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x40850688" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x40850688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40850860"/>
        <function-ref name="isInput" scoped="" ref="0x40850940"/>
        <function-ref name="setResistor" scoped="" ref="0x40850a20"/>
        <function-ref name="toggle" scoped="" ref="0x40850b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40850be0"/>
        <function-ref name="getResistor" scoped="" ref="0x40850cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40850da0"/>
        <function-ref name="get" scoped="" ref="0x40850e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084f010"/>
        <function-ref name="getRaw" scoped="" ref="0x4084f0f0"/>
        <function-ref name="set" scoped="" ref="0x4084f1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084f2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084f390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084f4f0"/>
        <function-ref name="clr" scoped="" ref="0x4084f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x40805688" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x40805688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40805860"/>
        <function-ref name="isInput" scoped="" ref="0x40805940"/>
        <function-ref name="setResistor" scoped="" ref="0x40805a20"/>
        <function-ref name="toggle" scoped="" ref="0x40805b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40805be0"/>
        <function-ref name="getResistor" scoped="" ref="0x40805cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805da0"/>
        <function-ref name="get" scoped="" ref="0x40805e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081a010"/>
        <function-ref name="getRaw" scoped="" ref="0x4081a0f0"/>
        <function-ref name="set" scoped="" ref="0x4081a1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081a2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081a390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081a4f0"/>
        <function-ref name="clr" scoped="" ref="0x4081a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x4081f848" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x4081f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081fa20"/>
        <function-ref name="isInput" scoped="" ref="0x4081fb00"/>
        <function-ref name="setResistor" scoped="" ref="0x4081fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x4081fcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4081fda0"/>
        <function-ref name="getResistor" scoped="" ref="0x4081fe80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081e010"/>
        <function-ref name="get" scoped="" ref="0x4081e0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4081e1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x4081e2b0"/>
        <function-ref name="set" scoped="" ref="0x4081e390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4081e470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4081e550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4081e6b0"/>
        <function-ref name="clr" scoped="" ref="0x4081e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x4082aa08" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x4082aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082abe0"/>
        <function-ref name="isInput" scoped="" ref="0x4082acc0"/>
        <function-ref name="setResistor" scoped="" ref="0x4082ada0"/>
        <function-ref name="toggle" scoped="" ref="0x4082ae80"/>
        <function-ref name="isOutput" scoped="" ref="0x40829010"/>
        <function-ref name="getResistor" scoped="" ref="0x408290f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408291d0"/>
        <function-ref name="get" scoped="" ref="0x408292b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40829390"/>
        <function-ref name="getRaw" scoped="" ref="0x40829470"/>
        <function-ref name="set" scoped="" ref="0x40829550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40829630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40829710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40829870"/>
        <function-ref name="clr" scoped="" ref="0x40829950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x40835ca8" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x40835ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40835e80"/>
        <function-ref name="isInput" scoped="" ref="0x40834010"/>
        <function-ref name="setResistor" scoped="" ref="0x408340f0"/>
        <function-ref name="toggle" scoped="" ref="0x408341d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408342b0"/>
        <function-ref name="getResistor" scoped="" ref="0x40834390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40834470"/>
        <function-ref name="get" scoped="" ref="0x40834550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40834630"/>
        <function-ref name="getRaw" scoped="" ref="0x40834710"/>
        <function-ref name="set" scoped="" ref="0x408347f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408348d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408349b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40834b10"/>
        <function-ref name="clr" scoped="" ref="0x40834bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x40847348" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x40847348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40847520"/>
        <function-ref name="isInput" scoped="" ref="0x40847600"/>
        <function-ref name="setResistor" scoped="" ref="0x408476e0"/>
        <function-ref name="toggle" scoped="" ref="0x408477c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408478a0"/>
        <function-ref name="getResistor" scoped="" ref="0x40847980"/>
        <function-ref name="makeOutput" scoped="" ref="0x40847a60"/>
        <function-ref name="get" scoped="" ref="0x40847b40"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40847c20"/>
        <function-ref name="getRaw" scoped="" ref="0x40847d00"/>
        <function-ref name="set" scoped="" ref="0x40847de0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40847ec0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085d010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085d170"/>
        <function-ref name="clr" scoped="" ref="0x4085d250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x40852598" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x40852598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40852770"/>
        <function-ref name="isInput" scoped="" ref="0x40852850"/>
        <function-ref name="setResistor" scoped="" ref="0x40852930"/>
        <function-ref name="toggle" scoped="" ref="0x40852a10"/>
        <function-ref name="isOutput" scoped="" ref="0x40852af0"/>
        <function-ref name="getResistor" scoped="" ref="0x40852bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40852cb0"/>
        <function-ref name="get" scoped="" ref="0x40852d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40852e70"/>
        <function-ref name="getRaw" scoped="" ref="0x40869010"/>
        <function-ref name="set" scoped="" ref="0x408690f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408691d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408692b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40869410"/>
        <function-ref name="clr" scoped="" ref="0x408694f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x408481a0" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x408481a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40848378"/>
        <function-ref name="isInput" scoped="" ref="0x40848458"/>
        <function-ref name="setResistor" scoped="" ref="0x40848538"/>
        <function-ref name="toggle" scoped="" ref="0x40848618"/>
        <function-ref name="isOutput" scoped="" ref="0x408486f8"/>
        <function-ref name="getResistor" scoped="" ref="0x408487d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x408488b8"/>
        <function-ref name="get" scoped="" ref="0x40848998"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40848a78"/>
        <function-ref name="getRaw" scoped="" ref="0x40848b58"/>
        <function-ref name="set" scoped="" ref="0x40848c38"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40848d18"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40848df8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40847010"/>
        <function-ref name="clr" scoped="" ref="0x408470f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x40832010" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x40832010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408321e8"/>
        <function-ref name="isInput" scoped="" ref="0x408322c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408323a8"/>
        <function-ref name="toggle" scoped="" ref="0x40832488"/>
        <function-ref name="isOutput" scoped="" ref="0x40832568"/>
        <function-ref name="getResistor" scoped="" ref="0x40832648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40832728"/>
        <function-ref name="get" scoped="" ref="0x40832808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408328e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408329c8"/>
        <function-ref name="set" scoped="" ref="0x40832aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40832b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40832c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40832dc8"/>
        <function-ref name="clr" scoped="" ref="0x40832ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x40863010" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x40863010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408631e8"/>
        <function-ref name="isInput" scoped="" ref="0x408632c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408633a8"/>
        <function-ref name="toggle" scoped="" ref="0x40863488"/>
        <function-ref name="isOutput" scoped="" ref="0x40863568"/>
        <function-ref name="getResistor" scoped="" ref="0x40863648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40863728"/>
        <function-ref name="get" scoped="" ref="0x40863808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408638e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408639c8"/>
        <function-ref name="set" scoped="" ref="0x40863aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40863b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40863c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40863dc8"/>
        <function-ref name="clr" scoped="" ref="0x40863ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x408603e8" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x408603e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408605c0"/>
        <function-ref name="isInput" scoped="" ref="0x408606a0"/>
        <function-ref name="setResistor" scoped="" ref="0x40860780"/>
        <function-ref name="toggle" scoped="" ref="0x40860860"/>
        <function-ref name="isOutput" scoped="" ref="0x40860940"/>
        <function-ref name="getResistor" scoped="" ref="0x40860a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x40860b00"/>
        <function-ref name="get" scoped="" ref="0x40860be0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40860cc0"/>
        <function-ref name="getRaw" scoped="" ref="0x40860da0"/>
        <function-ref name="set" scoped="" ref="0x40860e80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4085f010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4085f0f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4085f250"/>
        <function-ref name="clr" scoped="" ref="0x4085f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x4084ea28" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x4084ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084ee00"/>
        <function-ref name="isInput" scoped="" ref="0x4084eee0"/>
        <function-ref name="setResistor" scoped="" ref="0x4084c010"/>
        <function-ref name="toggle" scoped="" ref="0x4084c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084c1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x4084c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084c390"/>
        <function-ref name="get" scoped="" ref="0x4084c470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4084c550"/>
        <function-ref name="getRaw" scoped="" ref="0x4084c630"/>
        <function-ref name="set" scoped="" ref="0x4084c710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4084c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4084c8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4084ca30"/>
        <function-ref name="clr" scoped="" ref="0x4084cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40875220" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40875220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408753f8"/>
        <function-ref name="isInput" scoped="" ref="0x408754d8"/>
        <function-ref name="setResistor" scoped="" ref="0x408755b8"/>
        <function-ref name="toggle" scoped="" ref="0x40875698"/>
        <function-ref name="isOutput" scoped="" ref="0x40875778"/>
        <function-ref name="getResistor" scoped="" ref="0x40875858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40875938"/>
        <function-ref name="get" scoped="" ref="0x40875a18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40875af8"/>
        <function-ref name="getRaw" scoped="" ref="0x40875bd8"/>
        <function-ref name="set" scoped="" ref="0x40875cb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40875d98"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40875e78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40876010"/>
        <function-ref name="clr" scoped="" ref="0x408760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088d918" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4088d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088daf0"/>
        <function-ref name="isInput" scoped="" ref="0x4088dbd0"/>
        <function-ref name="setResistor" scoped="" ref="0x4088dcb0"/>
        <function-ref name="toggle" scoped="" ref="0x4088dd90"/>
        <function-ref name="isOutput" scoped="" ref="0x4088de70"/>
        <function-ref name="getResistor" scoped="" ref="0x4088c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088c0f0"/>
        <function-ref name="get" scoped="" ref="0x4088c1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4088c2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x4088c390"/>
        <function-ref name="set" scoped="" ref="0x4088c470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4088c550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4088c630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4088c790"/>
        <function-ref name="clr" scoped="" ref="0x4088c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088a140" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4088a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088a318"/>
        <function-ref name="isInput" scoped="" ref="0x4088a3f8"/>
        <function-ref name="setResistor" scoped="" ref="0x4088a4d8"/>
        <function-ref name="toggle" scoped="" ref="0x4088a5b8"/>
        <function-ref name="isOutput" scoped="" ref="0x4088a698"/>
        <function-ref name="getResistor" scoped="" ref="0x4088a778"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088a858"/>
        <function-ref name="get" scoped="" ref="0x4088a938"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4088aa18"/>
        <function-ref name="getRaw" scoped="" ref="0x4088aaf8"/>
        <function-ref name="set" scoped="" ref="0x4088abd8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4088acb8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4088ad98"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4088aef8"/>
        <function-ref name="clr" scoped="" ref="0x40889010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408888a0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408888a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40888a78"/>
        <function-ref name="isInput" scoped="" ref="0x40888b58"/>
        <function-ref name="setResistor" scoped="" ref="0x40888c38"/>
        <function-ref name="toggle" scoped="" ref="0x40888d18"/>
        <function-ref name="isOutput" scoped="" ref="0x40888df8"/>
        <function-ref name="getResistor" scoped="" ref="0x40888ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40887010"/>
        <function-ref name="get" scoped="" ref="0x408870f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408871d0"/>
        <function-ref name="getRaw" scoped="" ref="0x408872b0"/>
        <function-ref name="set" scoped="" ref="0x40887390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40887470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40887550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408876b0"/>
        <function-ref name="clr" scoped="" ref="0x40887790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40885010" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40885010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408851e8"/>
        <function-ref name="isInput" scoped="" ref="0x408852c8"/>
        <function-ref name="setResistor" scoped="" ref="0x408853a8"/>
        <function-ref name="toggle" scoped="" ref="0x40885488"/>
        <function-ref name="isOutput" scoped="" ref="0x40885568"/>
        <function-ref name="getResistor" scoped="" ref="0x40885648"/>
        <function-ref name="makeOutput" scoped="" ref="0x40885728"/>
        <function-ref name="get" scoped="" ref="0x40885808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408858e8"/>
        <function-ref name="getRaw" scoped="" ref="0x408859c8"/>
        <function-ref name="set" scoped="" ref="0x40885aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40885b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40885c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40885dc8"/>
        <function-ref name="clr" scoped="" ref="0x40885ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40883730" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40883730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40883908"/>
        <function-ref name="isInput" scoped="" ref="0x408839e8"/>
        <function-ref name="setResistor" scoped="" ref="0x40883ac8"/>
        <function-ref name="toggle" scoped="" ref="0x40883ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x40883c88"/>
        <function-ref name="getResistor" scoped="" ref="0x40883d68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40883e48"/>
        <function-ref name="get" scoped="" ref="0x40883f28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40882018"/>
        <function-ref name="getRaw" scoped="" ref="0x408820f8"/>
        <function-ref name="set" scoped="" ref="0x408821d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408822b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40882398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408824f8"/>
        <function-ref name="clr" scoped="" ref="0x408825d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40899df8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40899df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40898010"/>
        <function-ref name="isInput" scoped="" ref="0x408980f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408981d0"/>
        <function-ref name="toggle" scoped="" ref="0x408982b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40898390"/>
        <function-ref name="getResistor" scoped="" ref="0x40898470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40898550"/>
        <function-ref name="get" scoped="" ref="0x40898630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40898710"/>
        <function-ref name="getRaw" scoped="" ref="0x408987f0"/>
        <function-ref name="set" scoped="" ref="0x408988d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408989b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40898a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40898bf0"/>
        <function-ref name="clr" scoped="" ref="0x40898cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408965c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408965c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408967a0"/>
        <function-ref name="isInput" scoped="" ref="0x40896880"/>
        <function-ref name="setResistor" scoped="" ref="0x40896960"/>
        <function-ref name="toggle" scoped="" ref="0x40896a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40896b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40896c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40896ce0"/>
        <function-ref name="get" scoped="" ref="0x40896dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40896ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40895010"/>
        <function-ref name="set" scoped="" ref="0x408950f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408951d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408952b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40895410"/>
        <function-ref name="clr" scoped="" ref="0x408954f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40894d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x40894d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40893010"/>
        <function-ref name="isInput" scoped="" ref="0x408930f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408931d0"/>
        <function-ref name="toggle" scoped="" ref="0x408932b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40893390"/>
        <function-ref name="getResistor" scoped="" ref="0x40893470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40893550"/>
        <function-ref name="get" scoped="" ref="0x40893630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40893710"/>
        <function-ref name="getRaw" scoped="" ref="0x408937f0"/>
        <function-ref name="set" scoped="" ref="0x408938d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408939b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x40893a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40893bf0"/>
        <function-ref name="clr" scoped="" ref="0x40893cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408915c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408915c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408917a0"/>
        <function-ref name="isInput" scoped="" ref="0x40891880"/>
        <function-ref name="setResistor" scoped="" ref="0x40891960"/>
        <function-ref name="toggle" scoped="" ref="0x40891a40"/>
        <function-ref name="isOutput" scoped="" ref="0x40891b20"/>
        <function-ref name="getResistor" scoped="" ref="0x40891c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40891ce0"/>
        <function-ref name="get" scoped="" ref="0x40891dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40891ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x40890010"/>
        <function-ref name="set" scoped="" ref="0x408900f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408901d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408902b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40890410"/>
        <function-ref name="clr" scoped="" ref="0x408904f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088fd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4088fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088e010"/>
        <function-ref name="isInput" scoped="" ref="0x4088e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4088e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4088e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4088e390"/>
        <function-ref name="getResistor" scoped="" ref="0x4088e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088e550"/>
        <function-ref name="get" scoped="" ref="0x4088e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4088e710"/>
        <function-ref name="getRaw" scoped="" ref="0x4088e7f0"/>
        <function-ref name="set" scoped="" ref="0x4088e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4088e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4088ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4088ebf0"/>
        <function-ref name="clr" scoped="" ref="0x4088ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a45c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408a45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a47a0"/>
        <function-ref name="isInput" scoped="" ref="0x408a4880"/>
        <function-ref name="setResistor" scoped="" ref="0x408a4960"/>
        <function-ref name="toggle" scoped="" ref="0x408a4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408a4b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408a4c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a4ce0"/>
        <function-ref name="get" scoped="" ref="0x408a4dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a4ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408a3010"/>
        <function-ref name="set" scoped="" ref="0x408a30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408a31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408a32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408a3410"/>
        <function-ref name="clr" scoped="" ref="0x408a34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a2de8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408a2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a0010"/>
        <function-ref name="isInput" scoped="" ref="0x408a00f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408a01d0"/>
        <function-ref name="toggle" scoped="" ref="0x408a02b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a0390"/>
        <function-ref name="getResistor" scoped="" ref="0x408a0470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a0550"/>
        <function-ref name="get" scoped="" ref="0x408a0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a0710"/>
        <function-ref name="getRaw" scoped="" ref="0x408a07f0"/>
        <function-ref name="set" scoped="" ref="0x408a08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408a09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408a0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408a0bf0"/>
        <function-ref name="clr" scoped="" ref="0x408a0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089e5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4089e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089e7a0"/>
        <function-ref name="isInput" scoped="" ref="0x4089e880"/>
        <function-ref name="setResistor" scoped="" ref="0x4089e960"/>
        <function-ref name="toggle" scoped="" ref="0x4089ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x4089eb20"/>
        <function-ref name="getResistor" scoped="" ref="0x4089ec00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089ece0"/>
        <function-ref name="get" scoped="" ref="0x4089edc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4089eea0"/>
        <function-ref name="getRaw" scoped="" ref="0x4089d010"/>
        <function-ref name="set" scoped="" ref="0x4089d0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4089d1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4089d2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4089d410"/>
        <function-ref name="clr" scoped="" ref="0x4089d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089cd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x4089cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089b010"/>
        <function-ref name="isInput" scoped="" ref="0x4089b0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x4089b1d0"/>
        <function-ref name="toggle" scoped="" ref="0x4089b2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4089b390"/>
        <function-ref name="getResistor" scoped="" ref="0x4089b470"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089b550"/>
        <function-ref name="get" scoped="" ref="0x4089b630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4089b710"/>
        <function-ref name="getRaw" scoped="" ref="0x4089b7f0"/>
        <function-ref name="set" scoped="" ref="0x4089b8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4089b9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4089ba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4089bbf0"/>
        <function-ref name="clr" scoped="" ref="0x4089bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b15c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408b15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b17a0"/>
        <function-ref name="isInput" scoped="" ref="0x408b1880"/>
        <function-ref name="setResistor" scoped="" ref="0x408b1960"/>
        <function-ref name="toggle" scoped="" ref="0x408b1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408b1b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408b1c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b1ce0"/>
        <function-ref name="get" scoped="" ref="0x408b1dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408b1ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408b0010"/>
        <function-ref name="set" scoped="" ref="0x408b00f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b01d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b02b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b0410"/>
        <function-ref name="clr" scoped="" ref="0x408b04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408afd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408afd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ae010"/>
        <function-ref name="isInput" scoped="" ref="0x408ae0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408ae1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408ae2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408ae390"/>
        <function-ref name="getResistor" scoped="" ref="0x408ae470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ae550"/>
        <function-ref name="get" scoped="" ref="0x408ae630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408ae710"/>
        <function-ref name="getRaw" scoped="" ref="0x408ae7f0"/>
        <function-ref name="set" scoped="" ref="0x408ae8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ae9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408aea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408aebf0"/>
        <function-ref name="clr" scoped="" ref="0x408aecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ac5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ac5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ac7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408ac880"/>
        <function-ref name="setResistor" scoped="" ref="0x408ac960"/>
        <function-ref name="toggle" scoped="" ref="0x408aca40"/>
        <function-ref name="isOutput" scoped="" ref="0x408acb20"/>
        <function-ref name="getResistor" scoped="" ref="0x408acc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408acce0"/>
        <function-ref name="get" scoped="" ref="0x408acdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408acea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408ab010"/>
        <function-ref name="set" scoped="" ref="0x408ab0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ab1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408ab2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ab410"/>
        <function-ref name="clr" scoped="" ref="0x408ab4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408aad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408aad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a9010"/>
        <function-ref name="isInput" scoped="" ref="0x408a90f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408a91d0"/>
        <function-ref name="toggle" scoped="" ref="0x408a92b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a9390"/>
        <function-ref name="getResistor" scoped="" ref="0x408a9470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a9550"/>
        <function-ref name="get" scoped="" ref="0x408a9630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a9710"/>
        <function-ref name="getRaw" scoped="" ref="0x408a97f0"/>
        <function-ref name="set" scoped="" ref="0x408a98d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408a99b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408a9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408a9bf0"/>
        <function-ref name="clr" scoped="" ref="0x408a9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a75c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408a75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a77a0"/>
        <function-ref name="isInput" scoped="" ref="0x408a7880"/>
        <function-ref name="setResistor" scoped="" ref="0x408a7960"/>
        <function-ref name="toggle" scoped="" ref="0x408a7a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408a7b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408a7c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a7ce0"/>
        <function-ref name="get" scoped="" ref="0x408a7dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408a7ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408a6010"/>
        <function-ref name="set" scoped="" ref="0x408a60f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408a61d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408a62b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408a6410"/>
        <function-ref name="clr" scoped="" ref="0x408a64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408bdd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408bdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bc010"/>
        <function-ref name="isInput" scoped="" ref="0x408bc0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408bc1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408bc2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408bc390"/>
        <function-ref name="getResistor" scoped="" ref="0x408bc470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bc550"/>
        <function-ref name="get" scoped="" ref="0x408bc630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408bc710"/>
        <function-ref name="getRaw" scoped="" ref="0x408bc7f0"/>
        <function-ref name="set" scoped="" ref="0x408bc8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408bc9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408bca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408bcbf0"/>
        <function-ref name="clr" scoped="" ref="0x408bccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ba5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ba5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ba7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408ba880"/>
        <function-ref name="setResistor" scoped="" ref="0x408ba960"/>
        <function-ref name="toggle" scoped="" ref="0x408baa40"/>
        <function-ref name="isOutput" scoped="" ref="0x408bab20"/>
        <function-ref name="getResistor" scoped="" ref="0x408bac00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bace0"/>
        <function-ref name="get" scoped="" ref="0x408badc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408baea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408b9010"/>
        <function-ref name="set" scoped="" ref="0x408b90f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b91d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b92b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b9410"/>
        <function-ref name="clr" scoped="" ref="0x408b94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b8d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408b8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b7010"/>
        <function-ref name="isInput" scoped="" ref="0x408b70f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408b71d0"/>
        <function-ref name="toggle" scoped="" ref="0x408b72b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b7390"/>
        <function-ref name="getResistor" scoped="" ref="0x408b7470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b7550"/>
        <function-ref name="get" scoped="" ref="0x408b7630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408b7710"/>
        <function-ref name="getRaw" scoped="" ref="0x408b77f0"/>
        <function-ref name="set" scoped="" ref="0x408b78d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b79b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b7a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b7bf0"/>
        <function-ref name="clr" scoped="" ref="0x408b7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b55c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408b55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b57a0"/>
        <function-ref name="isInput" scoped="" ref="0x408b5880"/>
        <function-ref name="setResistor" scoped="" ref="0x408b5960"/>
        <function-ref name="toggle" scoped="" ref="0x408b5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408b5b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408b5c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b5ce0"/>
        <function-ref name="get" scoped="" ref="0x408b5dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408b5ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408b4010"/>
        <function-ref name="set" scoped="" ref="0x408b40f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b41d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b42b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b4410"/>
        <function-ref name="clr" scoped="" ref="0x408b44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b3e68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408b3e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b2050"/>
        <function-ref name="isInput" scoped="" ref="0x408b2130"/>
        <function-ref name="setResistor" scoped="" ref="0x408b2210"/>
        <function-ref name="toggle" scoped="" ref="0x408b22f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b23d0"/>
        <function-ref name="getResistor" scoped="" ref="0x408b24b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b2590"/>
        <function-ref name="get" scoped="" ref="0x408b2670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408b2750"/>
        <function-ref name="getRaw" scoped="" ref="0x408b2830"/>
        <function-ref name="set" scoped="" ref="0x408b2910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408b29f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408b2ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408b2c30"/>
        <function-ref name="clr" scoped="" ref="0x408b2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c85c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408c85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c87a0"/>
        <function-ref name="isInput" scoped="" ref="0x408c8880"/>
        <function-ref name="setResistor" scoped="" ref="0x408c8960"/>
        <function-ref name="toggle" scoped="" ref="0x408c8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408c8b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408c8c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c8ce0"/>
        <function-ref name="get" scoped="" ref="0x408c8dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408c8ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408c6010"/>
        <function-ref name="set" scoped="" ref="0x408c60f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408c61d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408c62b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408c6410"/>
        <function-ref name="clr" scoped="" ref="0x408c64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c5d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408c5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c4010"/>
        <function-ref name="isInput" scoped="" ref="0x408c40f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408c41d0"/>
        <function-ref name="toggle" scoped="" ref="0x408c42b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408c4390"/>
        <function-ref name="getResistor" scoped="" ref="0x408c4470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c4550"/>
        <function-ref name="get" scoped="" ref="0x408c4630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408c4710"/>
        <function-ref name="getRaw" scoped="" ref="0x408c47f0"/>
        <function-ref name="set" scoped="" ref="0x408c48d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408c49b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408c4a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408c4bf0"/>
        <function-ref name="clr" scoped="" ref="0x408c4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c25c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408c25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c27a0"/>
        <function-ref name="isInput" scoped="" ref="0x408c2880"/>
        <function-ref name="setResistor" scoped="" ref="0x408c2960"/>
        <function-ref name="toggle" scoped="" ref="0x408c2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408c2b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408c2c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c2ce0"/>
        <function-ref name="get" scoped="" ref="0x408c2dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408c2ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408c1010"/>
        <function-ref name="set" scoped="" ref="0x408c10f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408c11d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408c12b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408c1410"/>
        <function-ref name="clr" scoped="" ref="0x408c14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c0d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408c0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bf010"/>
        <function-ref name="isInput" scoped="" ref="0x408bf0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408bf1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408bf2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408bf390"/>
        <function-ref name="getResistor" scoped="" ref="0x408bf470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bf550"/>
        <function-ref name="get" scoped="" ref="0x408bf630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408bf710"/>
        <function-ref name="getRaw" scoped="" ref="0x408bf7f0"/>
        <function-ref name="set" scoped="" ref="0x408bf8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408bf9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408bfa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408bfbf0"/>
        <function-ref name="clr" scoped="" ref="0x408bfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408d55c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408d55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408d57a0"/>
        <function-ref name="isInput" scoped="" ref="0x408d5880"/>
        <function-ref name="setResistor" scoped="" ref="0x408d5960"/>
        <function-ref name="toggle" scoped="" ref="0x408d5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408d5b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408d5c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408d5ce0"/>
        <function-ref name="get" scoped="" ref="0x408d5dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408d5ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408d4010"/>
        <function-ref name="set" scoped="" ref="0x408d40f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408d41d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408d42b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408d4410"/>
        <function-ref name="clr" scoped="" ref="0x408d44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408d3d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408d3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408d2010"/>
        <function-ref name="isInput" scoped="" ref="0x408d20f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408d21d0"/>
        <function-ref name="toggle" scoped="" ref="0x408d22b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408d2390"/>
        <function-ref name="getResistor" scoped="" ref="0x408d2470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408d2550"/>
        <function-ref name="get" scoped="" ref="0x408d2630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408d2710"/>
        <function-ref name="getRaw" scoped="" ref="0x408d27f0"/>
        <function-ref name="set" scoped="" ref="0x408d28d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408d29b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408d2a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408d2bf0"/>
        <function-ref name="clr" scoped="" ref="0x408d2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408d05c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408d05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408d07a0"/>
        <function-ref name="isInput" scoped="" ref="0x408d0880"/>
        <function-ref name="setResistor" scoped="" ref="0x408d0960"/>
        <function-ref name="toggle" scoped="" ref="0x408d0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408d0b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408d0c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408d0ce0"/>
        <function-ref name="get" scoped="" ref="0x408d0dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408d0ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408cf010"/>
        <function-ref name="set" scoped="" ref="0x408cf0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408cf1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408cf2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408cf410"/>
        <function-ref name="clr" scoped="" ref="0x408cf4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ced68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ced68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408cd010"/>
        <function-ref name="isInput" scoped="" ref="0x408cd0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408cd1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408cd2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408cd390"/>
        <function-ref name="getResistor" scoped="" ref="0x408cd470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408cd550"/>
        <function-ref name="get" scoped="" ref="0x408cd630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408cd710"/>
        <function-ref name="getRaw" scoped="" ref="0x408cd7f0"/>
        <function-ref name="set" scoped="" ref="0x408cd8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408cd9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408cda90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408cdbf0"/>
        <function-ref name="clr" scoped="" ref="0x408cdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408cb5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408cb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408cb7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408cb880"/>
        <function-ref name="setResistor" scoped="" ref="0x408cb960"/>
        <function-ref name="toggle" scoped="" ref="0x408cba40"/>
        <function-ref name="isOutput" scoped="" ref="0x408cbb20"/>
        <function-ref name="getResistor" scoped="" ref="0x408cbc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408cbce0"/>
        <function-ref name="get" scoped="" ref="0x408cbdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408cbea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408ca010"/>
        <function-ref name="set" scoped="" ref="0x408ca0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ca1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408ca2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ca410"/>
        <function-ref name="clr" scoped="" ref="0x408ca4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e2d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408e2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e1010"/>
        <function-ref name="isInput" scoped="" ref="0x408e10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408e11d0"/>
        <function-ref name="toggle" scoped="" ref="0x408e12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408e1390"/>
        <function-ref name="getResistor" scoped="" ref="0x408e1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e1550"/>
        <function-ref name="get" scoped="" ref="0x408e1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408e1710"/>
        <function-ref name="getRaw" scoped="" ref="0x408e17f0"/>
        <function-ref name="set" scoped="" ref="0x408e18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408e19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408e1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408e1bf0"/>
        <function-ref name="clr" scoped="" ref="0x408e1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408df5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408df5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408df7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408df880"/>
        <function-ref name="setResistor" scoped="" ref="0x408df960"/>
        <function-ref name="toggle" scoped="" ref="0x408dfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x408dfb20"/>
        <function-ref name="getResistor" scoped="" ref="0x408dfc00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dfce0"/>
        <function-ref name="get" scoped="" ref="0x408dfdc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408dfea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408de010"/>
        <function-ref name="set" scoped="" ref="0x408de0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408de1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408de2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408de410"/>
        <function-ref name="clr" scoped="" ref="0x408de4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ddd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ddd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408dc010"/>
        <function-ref name="isInput" scoped="" ref="0x408dc0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408dc1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408dc2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408dc390"/>
        <function-ref name="getResistor" scoped="" ref="0x408dc470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dc550"/>
        <function-ref name="get" scoped="" ref="0x408dc630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408dc710"/>
        <function-ref name="getRaw" scoped="" ref="0x408dc7f0"/>
        <function-ref name="set" scoped="" ref="0x408dc8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408dc9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408dca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408dcbf0"/>
        <function-ref name="clr" scoped="" ref="0x408dccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408da5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408da5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408da7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408da880"/>
        <function-ref name="setResistor" scoped="" ref="0x408da960"/>
        <function-ref name="toggle" scoped="" ref="0x408daa40"/>
        <function-ref name="isOutput" scoped="" ref="0x408dab20"/>
        <function-ref name="getResistor" scoped="" ref="0x408dac00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dace0"/>
        <function-ref name="get" scoped="" ref="0x408dadc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408daea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408d9010"/>
        <function-ref name="set" scoped="" ref="0x408d90f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408d91d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408d92b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408d9410"/>
        <function-ref name="clr" scoped="" ref="0x408d94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408d8d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408d8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408d6010"/>
        <function-ref name="isInput" scoped="" ref="0x408d60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408d61d0"/>
        <function-ref name="toggle" scoped="" ref="0x408d62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408d6390"/>
        <function-ref name="getResistor" scoped="" ref="0x408d6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408d6550"/>
        <function-ref name="get" scoped="" ref="0x408d6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408d6710"/>
        <function-ref name="getRaw" scoped="" ref="0x408d67f0"/>
        <function-ref name="set" scoped="" ref="0x408d68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408d69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408d6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408d6bf0"/>
        <function-ref name="clr" scoped="" ref="0x408d6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ee5c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ee5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ee7a0"/>
        <function-ref name="isInput" scoped="" ref="0x408ee880"/>
        <function-ref name="setResistor" scoped="" ref="0x408ee960"/>
        <function-ref name="toggle" scoped="" ref="0x408eea40"/>
        <function-ref name="isOutput" scoped="" ref="0x408eeb20"/>
        <function-ref name="getResistor" scoped="" ref="0x408eec00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408eece0"/>
        <function-ref name="get" scoped="" ref="0x408eedc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408eeea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408ed010"/>
        <function-ref name="set" scoped="" ref="0x408ed0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408ed1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408ed2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ed410"/>
        <function-ref name="clr" scoped="" ref="0x408ed4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ecd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408ecd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408eb010"/>
        <function-ref name="isInput" scoped="" ref="0x408eb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408eb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408eb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408eb390"/>
        <function-ref name="getResistor" scoped="" ref="0x408eb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408eb550"/>
        <function-ref name="get" scoped="" ref="0x408eb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408eb710"/>
        <function-ref name="getRaw" scoped="" ref="0x408eb7f0"/>
        <function-ref name="set" scoped="" ref="0x408eb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408eb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408eba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408ebbf0"/>
        <function-ref name="clr" scoped="" ref="0x408ebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e95c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408e95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e97a0"/>
        <function-ref name="isInput" scoped="" ref="0x408e9880"/>
        <function-ref name="setResistor" scoped="" ref="0x408e9960"/>
        <function-ref name="toggle" scoped="" ref="0x408e9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408e9b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408e9c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e9ce0"/>
        <function-ref name="get" scoped="" ref="0x408e9dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408e9ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408e8010"/>
        <function-ref name="set" scoped="" ref="0x408e80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408e81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408e82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408e8410"/>
        <function-ref name="clr" scoped="" ref="0x408e84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e7d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408e7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e6010"/>
        <function-ref name="isInput" scoped="" ref="0x408e60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408e61d0"/>
        <function-ref name="toggle" scoped="" ref="0x408e62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408e6390"/>
        <function-ref name="getResistor" scoped="" ref="0x408e6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e6550"/>
        <function-ref name="get" scoped="" ref="0x408e6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408e6710"/>
        <function-ref name="getRaw" scoped="" ref="0x408e67f0"/>
        <function-ref name="set" scoped="" ref="0x408e68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408e69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408e6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408e6bf0"/>
        <function-ref name="clr" scoped="" ref="0x408e6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e45c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408e45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e47a0"/>
        <function-ref name="isInput" scoped="" ref="0x408e4880"/>
        <function-ref name="setResistor" scoped="" ref="0x408e4960"/>
        <function-ref name="toggle" scoped="" ref="0x408e4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408e4b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408e4c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e4ce0"/>
        <function-ref name="get" scoped="" ref="0x408e4dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408e4ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408e3010"/>
        <function-ref name="set" scoped="" ref="0x408e30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408e31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408e32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408e3410"/>
        <function-ref name="clr" scoped="" ref="0x408e34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408fcd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408fcd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408fb010"/>
        <function-ref name="isInput" scoped="" ref="0x408fb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408fb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x408fb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408fb390"/>
        <function-ref name="getResistor" scoped="" ref="0x408fb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408fb550"/>
        <function-ref name="get" scoped="" ref="0x408fb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408fb710"/>
        <function-ref name="getRaw" scoped="" ref="0x408fb7f0"/>
        <function-ref name="set" scoped="" ref="0x408fb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408fb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408fba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408fbbf0"/>
        <function-ref name="clr" scoped="" ref="0x408fbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f95c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408f95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f97a0"/>
        <function-ref name="isInput" scoped="" ref="0x408f9880"/>
        <function-ref name="setResistor" scoped="" ref="0x408f9960"/>
        <function-ref name="toggle" scoped="" ref="0x408f9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408f9b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408f9c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f9ce0"/>
        <function-ref name="get" scoped="" ref="0x408f9dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408f9ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408f8010"/>
        <function-ref name="set" scoped="" ref="0x408f80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408f81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408f82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408f8410"/>
        <function-ref name="clr" scoped="" ref="0x408f84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f7d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408f7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f6010"/>
        <function-ref name="isInput" scoped="" ref="0x408f60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x408f61d0"/>
        <function-ref name="toggle" scoped="" ref="0x408f62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408f6390"/>
        <function-ref name="getResistor" scoped="" ref="0x408f6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f6550"/>
        <function-ref name="get" scoped="" ref="0x408f6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408f6710"/>
        <function-ref name="getRaw" scoped="" ref="0x408f67f0"/>
        <function-ref name="set" scoped="" ref="0x408f68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408f69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408f6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408f6bf0"/>
        <function-ref name="clr" scoped="" ref="0x408f6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f45c8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x408f45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f47a0"/>
        <function-ref name="isInput" scoped="" ref="0x408f4880"/>
        <function-ref name="setResistor" scoped="" ref="0x408f4960"/>
        <function-ref name="toggle" scoped="" ref="0x408f4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x408f4b20"/>
        <function-ref name="getResistor" scoped="" ref="0x408f4c00"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f4ce0"/>
        <function-ref name="get" scoped="" ref="0x408f4dc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x408f4ea0"/>
        <function-ref name="getRaw" scoped="" ref="0x408f3010"/>
        <function-ref name="set" scoped="" ref="0x408f30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x408f31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x408f32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x408f3410"/>
        <function-ref name="clr" scoped="" ref="0x408f34f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4091cb68" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4091cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091cd40"/>
        <function-ref name="isInput" scoped="" ref="0x4091ce20"/>
        <function-ref name="setResistor" scoped="" ref="0x4091cf00"/>
        <function-ref name="toggle" scoped="" ref="0x4093a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4093a0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x4093a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4093a2b0"/>
        <function-ref name="get" scoped="" ref="0x4093a390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4093a470"/>
        <function-ref name="getRaw" scoped="" ref="0x4093a550"/>
        <function-ref name="set" scoped="" ref="0x4093a630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4093a710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4093a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4093a950"/>
        <function-ref name="clr" scoped="" ref="0x4093aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x4091c1f0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x4091c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091c3c8"/>
        <function-ref name="isInput" scoped="" ref="0x4091c4a8"/>
        <function-ref name="toggle" scoped="" ref="0x4091c588"/>
        <function-ref name="isOutput" scoped="" ref="0x4091c668"/>
        <function-ref name="get" scoped="" ref="0x4091c748"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091c828"/>
        <function-ref name="set" scoped="" ref="0x4091c908"/>
        <function-ref name="clr" scoped="" ref="0x4091c9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x4092f350" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x4092f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4092f528"/>
        <function-ref name="isInput" scoped="" ref="0x4092f608"/>
        <function-ref name="setResistor" scoped="" ref="0x4092f6e8"/>
        <function-ref name="toggle" scoped="" ref="0x4092f7c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4092f8a8"/>
        <function-ref name="getResistor" scoped="" ref="0x4092f988"/>
        <function-ref name="makeOutput" scoped="" ref="0x4092fa68"/>
        <function-ref name="get" scoped="" ref="0x4092fb48"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x4092fc28"/>
        <function-ref name="getRaw" scoped="" ref="0x4092fd08"/>
        <function-ref name="set" scoped="" ref="0x4092fde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x4092fec8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x4092e010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x4092e170"/>
        <function-ref name="clr" scoped="" ref="0x4092e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40930990" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x40930990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40930b68"/>
        <function-ref name="isInput" scoped="" ref="0x40930c48"/>
        <function-ref name="toggle" scoped="" ref="0x40930d28"/>
        <function-ref name="isOutput" scoped="" ref="0x40930e08"/>
        <function-ref name="get" scoped="" ref="0x40930ee8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4092f010"/>
        <function-ref name="set" scoped="" ref="0x4092f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4092f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x40947b20" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x40947b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40947cf8"/>
        <function-ref name="isInput" scoped="" ref="0x40947dd8"/>
        <function-ref name="setResistor" scoped="" ref="0x40947eb8"/>
        <function-ref name="toggle" scoped="" ref="0x40946010"/>
        <function-ref name="isOutput" scoped="" ref="0x409460f0"/>
        <function-ref name="getResistor" scoped="" ref="0x409461d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409462b0"/>
        <function-ref name="get" scoped="" ref="0x40946390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x40946470"/>
        <function-ref name="getRaw" scoped="" ref="0x40946550"/>
        <function-ref name="set" scoped="" ref="0x40946630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x40946710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x409467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x40946950"/>
        <function-ref name="clr" scoped="" ref="0x40946a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x409471a8" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x409471a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40947380"/>
        <function-ref name="isInput" scoped="" ref="0x40947460"/>
        <function-ref name="toggle" scoped="" ref="0x40947540"/>
        <function-ref name="isOutput" scoped="" ref="0x40947620"/>
        <function-ref name="get" scoped="" ref="0x40947700"/>
        <function-ref name="makeOutput" scoped="" ref="0x409477e0"/>
        <function-ref name="set" scoped="" ref="0x409478c0"/>
        <function-ref name="clr" scoped="" ref="0x409479a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4093f280" loc="3:BinCounterP.nc">
      <component-ref qname="BinCounterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x4093f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4093f458"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4093f538"/>
        <function-ref name="led1On" scoped="" ref="0x4093f618"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4093f6f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4093f7d8"/>
        <function-ref name="get" scoped="" ref="0x4093f8b8"/>
        <function-ref name="led1Off" scoped="" ref="0x4093f998"/>
        <function-ref name="led2Off" scoped="" ref="0x4093fd18"/>
        <function-ref name="set" scoped="" ref="0x4093fa78"/>
        <function-ref name="led0On" scoped="" ref="0x4093fb58"/>
        <function-ref name="led2On" scoped="" ref="0x4093fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BinCounter" ref="0x40940d30" loc="2:BinCounterP.nc">
      <component-ref qname="BinCounterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BinCounter" scoped="" ref="0x40940d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BinCounter"/>
      </instance>
      <interface-functions>
        <function-ref name="completed" scoped="" ref="0x40940f08"/>
        <function-ref name="start" scoped="" ref="0x4093f010"/>
        <function-ref name="stop" scoped="" ref="0x4093f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4094fc00" loc="4:BinCounterP.nc">
      <component-ref qname="BinCounterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4094fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4094e730"/>
        <function-ref name="fired" scoped="" ref="0x4093e9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4094e0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4093ee60"/>
        <function-ref name="getdt" scoped="" ref="0x4094ebe0"/>
        <function-ref name="gett0" scoped="" ref="0x4094e988"/>
        <function-ref name="isRunning" scoped="" ref="0x4093ec08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4093e258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4094e410"/>
        <function-ref name="startOneShot" scoped="" ref="0x4093e4d8"/>
        <function-ref name="stop" scoped="" ref="0x4093e758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x406e3ec0" loc="3:BinCounterC.nc">
      <component-ref qname="BinCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x406e3ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x409600c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BinCounter" ref="0x406e3998" loc="2:BinCounterC.nc">
      <component-ref qname="BinCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BinCounter" scoped="" ref="0x406e3998"/></type-interface>
      <instance>
        <interfacedef-ref qname="BinCounter"/>
      </instance>
      <interface-functions>
        <function-ref name="completed" scoped="" ref="0x406e3b70"/>
        <function-ref name="start" scoped="" ref="0x406e3c50"/>
        <function-ref name="stop" scoped="" ref="0x406e3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4095d010" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BinCounterApp.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x4095d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a42b00"/>
        <function-ref name="fired" scoped="" ref="0x4095dd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a424c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a42268"/>
        <function-ref name="getdt" scoped="" ref="0x40a41010"/>
        <function-ref name="gett0" scoped="" ref="0x40a42d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40a42010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4095d638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a427e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4095d8b8"/>
        <function-ref name="stop" scoped="" ref="0x4095db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x409586e0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x409586e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40955248"/>
        <function-ref name="fired" scoped="" ref="0x409564e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40956bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40956998"/>
        <function-ref name="getdt" scoped="" ref="0x409556f8"/>
        <function-ref name="gett0" scoped="" ref="0x409554a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40956740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40958d08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40956f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40956010"/>
        <function-ref name="stop" scoped="" ref="0x40956290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4096e7c0" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x4096e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4096b330"/>
        <function-ref name="fired" scoped="" ref="0x4096c560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4096cc68"/>
        <function-ref name="isOneShot" scoped="" ref="0x4096ca10"/>
        <function-ref name="getdt" scoped="" ref="0x4096b7e0"/>
        <function-ref name="gett0" scoped="" ref="0x4096b588"/>
        <function-ref name="isRunning" scoped="" ref="0x4096c7b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4096ede8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4096b010"/>
        <function-ref name="startOneShot" scoped="" ref="0x4096c088"/>
        <function-ref name="stop" scoped="" ref="0x4096c308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409687f0" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x409687f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40968e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4096e010" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4096e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4096e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40966818" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40966818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409e2d58"/>
        <function-ref name="fired" scoped="" ref="0x409e2528"/>
        <function-ref name="startAt" scoped="" ref="0x409e2a18"/>
        <function-ref name="isRunning" scoped="" ref="0x409e27a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x409fe010"/>
        <function-ref name="start" scoped="" ref="0x409e2010"/>
        <function-ref name="stop" scoped="" ref="0x409e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409663c0" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x409663c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40966598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cca010" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40cca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cc94e0"/>
        <function-ref name="fired" scoped="" ref="0x40ccac78"/>
        <function-ref name="startAt" scoped="" ref="0x40cc91a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ccaef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40cc9758"/>
        <function-ref name="start" scoped="" ref="0x40cca760"/>
        <function-ref name="stop" scoped="" ref="0x40ccaa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cccb58" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40cccb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cccd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x40ce6030" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x40ce6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40ce6208"/>
        <function-ref name="setEvent" scoped="" ref="0x40ce62e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40ce63c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40ce64a8"/>
        <function-ref name="fired" scoped="" ref="0x40ce6588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x40ce9970" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x40ce9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce9b48"/>
        <function-ref name="setClockSource" scoped="" ref="0x40ce9c28"/>
        <function-ref name="enableEvents" scoped="" ref="0x40ce9d08"/>
        <function-ref name="get" scoped="" ref="0x40ce9de8"/>
        <function-ref name="disableEvents" scoped="" ref="0x40ce9ec8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ce7010"/>
        <function-ref name="getMode" scoped="" ref="0x40ce70f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ce71d0"/>
        <function-ref name="overflow" scoped="" ref="0x40ce72b0"/>
        <function-ref name="setMode" scoped="" ref="0x40ce7390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40ce7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x40ce75d0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x40ce75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40ce77a8"/>
        <function-ref name="getControl" scoped="" ref="0x40ce7888"/>
        <function-ref name="enableEvents" scoped="" ref="0x40ce7968"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40ce7a48"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40ce7b28"/>
        <function-ref name="disableEvents" scoped="" ref="0x40ce7c08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ce7ce8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40ce7dc8"/>
        <function-ref name="setControl" scoped="" ref="0x40ce7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x409891b0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x409891b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40989388"/>
        <function-ref name="setEvent" scoped="" ref="0x40989468"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40989548"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40989628"/>
        <function-ref name="fired" scoped="" ref="0x40989708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x4098b3b0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x4098b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098b588"/>
        <function-ref name="setClockSource" scoped="" ref="0x4098b668"/>
        <function-ref name="enableEvents" scoped="" ref="0x4098b748"/>
        <function-ref name="get" scoped="" ref="0x4098b828"/>
        <function-ref name="disableEvents" scoped="" ref="0x4098b908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4098b9e8"/>
        <function-ref name="getMode" scoped="" ref="0x4098bac8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4098bba8"/>
        <function-ref name="overflow" scoped="" ref="0x4098bc88"/>
        <function-ref name="setMode" scoped="" ref="0x4098bd68"/>
        <function-ref name="setInputDivider" scoped="" ref="0x4098be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x4098a3f8" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x4098a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4098a5d0"/>
        <function-ref name="getControl" scoped="" ref="0x4098a6b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4098a790"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4098a870"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4098a950"/>
        <function-ref name="disableEvents" scoped="" ref="0x4098aa30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4098ab10"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4098abf0"/>
        <function-ref name="setControl" scoped="" ref="0x4098acd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x40ce2a48" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x40ce2a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40ce2c20"/>
        <function-ref name="setEvent" scoped="" ref="0x40ce2d00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40ce2de0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40ce2ec0"/>
        <function-ref name="fired" scoped="" ref="0x40ce1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x40ce3340" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x40ce3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce3518"/>
        <function-ref name="setClockSource" scoped="" ref="0x40ce35f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x40ce36d8"/>
        <function-ref name="get" scoped="" ref="0x40ce37b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x40ce3898"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ce3978"/>
        <function-ref name="getMode" scoped="" ref="0x40ce3a58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ce3b38"/>
        <function-ref name="overflow" scoped="" ref="0x40ce3c18"/>
        <function-ref name="setMode" scoped="" ref="0x40ce3cf8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40ce3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ce59b8" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40ce59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce4e68"/>
        <function-ref name="fired" scoped="" ref="0x40ce4638"/>
        <function-ref name="startAt" scoped="" ref="0x40ce4b28"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce48b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ce3110"/>
        <function-ref name="start" scoped="" ref="0x40ce4120"/>
        <function-ref name="stop" scoped="" ref="0x40ce43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ce5540" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40ce5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce5718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x40ce2010" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x40ce2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40ce21e8"/>
        <function-ref name="getControl" scoped="" ref="0x40ce22c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x40ce23a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40ce2488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40ce2568"/>
        <function-ref name="disableEvents" scoped="" ref="0x40ce2648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ce2728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40ce2808"/>
        <function-ref name="setControl" scoped="" ref="0x40ce28e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409b0938" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x409b0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409b30a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409b3598"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409b3320"/>
        <function-ref name="overflow" scoped="" ref="0x409b3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x409ad440" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x409ad440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409adb90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409ac0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409ade08"/>
        <function-ref name="overflow" scoped="" ref="0x409ac320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x409abf08" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x409abf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409be0f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x409be1d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x409be2b0"/>
        <function-ref name="get" scoped="" ref="0x409be390"/>
        <function-ref name="disableEvents" scoped="" ref="0x409be470"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409be550"/>
        <function-ref name="getMode" scoped="" ref="0x409be630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409be710"/>
        <function-ref name="overflow" scoped="" ref="0x409be7f0"/>
        <function-ref name="setMode" scoped="" ref="0x409be8d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x409be9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409bfe10" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x409bfe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ab570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409aba60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409ab7e8"/>
        <function-ref name="overflow" scoped="" ref="0x409abcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x409bcbd0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x409bcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c8340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409c8830"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409c85b8"/>
        <function-ref name="overflow" scoped="" ref="0x409c8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409ae980" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x409ae980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409bc0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409bc5e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409bc370"/>
        <function-ref name="overflow" scoped="" ref="0x409bc860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cc8a38" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40cc8a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cc6010"/>
        <function-ref name="fired" scoped="" ref="0x40cc7718"/>
        <function-ref name="startAt" scoped="" ref="0x40cc7c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40cc7990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40cc6288"/>
        <function-ref name="start" scoped="" ref="0x40cc7200"/>
        <function-ref name="stop" scoped="" ref="0x40cc74a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40cc4870" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x40cc4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093ba80"/>
            <typename><typedef-ref name="T32khz" ref="0x4093bc48"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cc3d58"/>
        <function-ref name="fired" scoped="" ref="0x40cc3528"/>
        <function-ref name="startAt" scoped="" ref="0x40cc3a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40cc37a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40cc2010"/>
        <function-ref name="start" scoped="" ref="0x40cc3010"/>
        <function-ref name="stop" scoped="" ref="0x40cc32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40cc65d8" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x40cc65d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cc6d28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cc4288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cc4010"/>
        <function-ref name="overflow" scoped="" ref="0x40cc4500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40a02d08" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x40a02d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a02ee0"/>
        <function-ref name="runTask" scoped="" ref="0x40a01010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40a04398" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x40a04398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a02840"/>
        <function-ref name="fired" scoped="" ref="0x40a02010"/>
        <function-ref name="startAt" scoped="" ref="0x40a02500"/>
        <function-ref name="isRunning" scoped="" ref="0x40a02288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a02ab8"/>
        <function-ref name="start" scoped="" ref="0x40a04ae8"/>
        <function-ref name="stop" scoped="" ref="0x40a04d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409fc0a0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x409fc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a05b88"/>
        <function-ref name="fired" scoped="" ref="0x409fce20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a05548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a052f0"/>
        <function-ref name="getdt" scoped="" ref="0x40a04048"/>
        <function-ref name="gett0" scoped="" ref="0x40a05de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a05098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409fc6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a05868"/>
        <function-ref name="startOneShot" scoped="" ref="0x409fc948"/>
        <function-ref name="stop" scoped="" ref="0x409fcbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40a2f798" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x40a2f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a2f970"/>
        <function-ref name="runTask" scoped="" ref="0x40a2fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40a325a0" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x40a325a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a2f098"/>
        <function-ref name="fired" scoped="" ref="0x40a30330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a30a38"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a307e0"/>
        <function-ref name="getdt" scoped="" ref="0x40a2f548"/>
        <function-ref name="gett0" scoped="" ref="0x40a2f2f0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a30588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a32bc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a30d58"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a32e48"/>
        <function-ref name="stop" scoped="" ref="0x40a300d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a1d210" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40a1d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a33da8"/>
        <function-ref name="fired" scoped="" ref="0x40a33010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a33748"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a334e0"/>
        <function-ref name="getdt" scoped="" ref="0x40a322b0"/>
        <function-ref name="gett0" scoped="" ref="0x40a32048"/>
        <function-ref name="isRunning" scoped="" ref="0x40a33278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a1d848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a33a78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a1dad8"/>
        <function-ref name="stop" scoped="" ref="0x40a1dd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a45bc8" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x40a45bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2d238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a2d588" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x40a2d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x4093b640"/>
            <typename><typedef-ref name="TMilli" ref="0x4093b808"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2dcd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a44288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a44010"/>
        <function-ref name="overflow" scoped="" ref="0x40a44500"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x406e0cb8" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x404601b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x406e0158" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x4070b1a8" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x4070c138" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x4070cd80" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x406fdd70" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x4070c580" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x406fd600" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x406fd9b8" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x4070c980" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x406de010" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x404c28d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x407368b8" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x40736760" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x40737010" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40707a38"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x407051e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x40736de0" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x40735638" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x40736310" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x407351f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40737468" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x407378b0" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40737ed0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40707a38"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x407051e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40737d78" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40707a38"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x407051e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x40740418" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x4073fab0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x4073f958" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4073e210" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x4073e0b8" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4073f4b0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4073f010" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x40740980" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x40740828" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x407320c8" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x40732620" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407324c8" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x40732bd0" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x40732a78" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x40742188" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x40742030" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40742530" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40729600" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x407283e0" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x40728288" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x407299f0" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406fcd78" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x40729de8" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4072a5d0" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40729258" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4072a1d8" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4072a998" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x4072ae88" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4072ad30" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x407289c8" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x40728870" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x401340c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4074c0f8" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x406ca4e0" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x406ca8d8" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x406ca070" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4063f168" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40453e60" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40459798" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x404592d0" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4045f6d8" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x404601b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4045fbf0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x407f81a8" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x407f85f0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x407f8a70" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x407f72f8" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x407f6010" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407f64b8" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x407f8e98" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407f6bf8" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x407f6aa0" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x407f9d48" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x407f7778" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x407f7ba0" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x408047a0" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40804b88" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40804010" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40803408" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408043d0" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40803010" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407f2880" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x407f2c10" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x408188f8" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40818d20" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x40815d10" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x404601b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40815bb8" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40819bb0" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40816570" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x408142e8" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40816138" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408184b8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x40815290" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x40818010" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40133e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40819420" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x40816998" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x408156d8" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x40816e18" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x408197d8" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BinCounter" loc="1:BinCounter.nc">
      <function event="" provided="0" name="completed" ref="0x40940bc8" loc="5:BinCounter.nc">
        <interfacedef-ref qname="BinCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40940498" loc="2:BinCounter.nc">
        <interfacedef-ref qname="BinCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40940818" loc="3:BinCounter.nc">
        <interfacedef-ref qname="BinCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40954570" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40954570"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40950f00" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40953b30" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40951cc0" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40951978" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40951b60" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x409514d0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4094f888" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4094f358" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40951010" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40954bc8" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40954a70" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x409508e0" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40950598" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40950780" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x409532b0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40953158" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40953780" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40968010" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40968010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x409684f0" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40134300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409633b8" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409633b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40963520" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4097d7d8" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4097e4d0" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4097d190" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4097ee20" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          </variable>
          <variable name="dt" ref="0x4097d030" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4097e918" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4097dc68" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40963b50" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409639f8" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40963520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4097e070" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409b10c0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409b10c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409b1228" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b1228"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x409b1710" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b1228"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x409b0158" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x409b1c38" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404542e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x409b0558" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
