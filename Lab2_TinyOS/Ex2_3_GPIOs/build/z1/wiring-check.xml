<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:GPIO_LedsApp.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405f8010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40431e00"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40431e00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4050a338"/></to>
    </wire>
    <wire loc="8:GPIO_LedsApp.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40601d28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404fdcd8"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x404fdcd8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40609bb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404fba50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40613438"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4050a6d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403b79d8"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403b79d8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x404d5e48"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4050ac98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404fa2d0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/z1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404fa2d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404faa98"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405fe0e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404fba50"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/z1/PlatformC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x404faeb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405038a0"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405038a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4051eea8"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x40510098"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x405292b8"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404f14c8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40529cb8"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x40548628"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405bbaf0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x40556468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405b7a10"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x4054c518"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405aee88"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x40567930"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405c9868"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x405515f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405ae7b0"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x4055ddb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405c9190"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x40565438"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405dc430"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x40560388"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405c6588"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x40545e68"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x40585d58"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x4055a788"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405c2b08"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x4055edb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405c2430"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x40554010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405c38f8"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x4054cdb8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405bacc8"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x40566278"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405d56e8"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x40554c00"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405be870"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x40551db8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405ba5f0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x405491f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40562140"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x4055c5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405d5010"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x4053f9e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405b0ca8"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x40560ef8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405d2430"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x40557c18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405b2010"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x40567090"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405cda28"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x4054ed58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40584890"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x4055d5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405cd350"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x40566b18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405d0570"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x405537e8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405ca700"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x4055cdb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405d2e88"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x4055beb8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405b6be8"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x4055b5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405ddc78"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x4055e5f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405b6510"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x4055fa78"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x405dd220"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x4057d190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40562df0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x4057d4e8"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x405dade0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x4057d840"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x405d72c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405b27c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40562140"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405b1430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40562df0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405bd650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40562140"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405bc278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40562df0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405b9510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40562140"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405b8190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40562df0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x40588bb0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x40588f08"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x405d7748"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x40587270"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x405d7bd0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405c5430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405c4080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405c1350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405bf010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405cc270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405cce88"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405c8050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405c8c68"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405d5ea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405d4b00"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405d0d28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405cf970"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405dcbe8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40589b48"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x405db890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x40588848"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403b8178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x404d46b0"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404ddb38"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403b66a8"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40609bb0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40613be8"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40613be8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b8f00"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40613438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4061ad48"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4061bbf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406ef940"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4061ad48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407cc958"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406e0338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406acc60"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406bc010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406191b8"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406191b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407c87d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406fd360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40662cf0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40662cf0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406750c0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407cc958"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d5240"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x407c54c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407ccdb0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407ccdb0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407d56b8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407c6278"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40662cf0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x407d2060"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x407d8630"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x407d8630"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x407d2c58"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x407d7250"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x407d7250"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x407d16b0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x407d7c88"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x407d7c88"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x40556468"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x4055e5f8"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x40554c00"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x4055d5f8"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x405537e8"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x4055ddb8"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x40560388"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x4055c5f8"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x40560ef8"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x4055cdb8"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x4055fa78"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x4055b5f8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40678380"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40661810"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40661810"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4066e388"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x406664b8"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x406ba9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b8178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406f1560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b8178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="42:../../tos/platforms/z1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="44:../../tos/platforms/z1/PlatformP.nc">
      <module/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="46:../../tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/platforms/z1/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="35:../../tos/platforms/z1/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="GPIO_LedsC" loc="12:GPIO_LedsC.nc">
      <module/>
    </component>
    <component qname="GPIO_LedsApp.Timer" loc="44(GPIO_LedsApp.Timer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="49:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <documentation loc="35:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x40564d30" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x40561010" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x40561258" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x40561470" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x40561688" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x40561898" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x40561ac0" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x40561ce8" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x4056e010" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x40586488" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x405866e8" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40639538" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40639538"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4065d3c8" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4065d3c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4065f6c8" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4065f6c8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4065fb28" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4065fb28"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4065fd90" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4065fd90"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40674230" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40674230"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40674498" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40674920" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40674920"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40685410" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40685410"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40685870" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40685870"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40685ad8" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40685ad8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40684010" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40684010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40684278" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ad648" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ad648"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ca010" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ca010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406ca1f0" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406f08e0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406f08e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x404fba50" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x404fba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fbc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40431e00" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x40431e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404fa2d0" loc="43:../../tos/platforms/z1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x404fa2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fa4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x404faeb8" loc="46:../../tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x404faeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405000c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404faa98" loc="45:../../tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x404faa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404fac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x405002c8" loc="47:../../tos/platforms/z1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x405002c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405004a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x40510098" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x40510098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x40510890"/>
        <function-ref name="initTimerB" scoped="" ref="0x40510350"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x40510430"/>
        <function-ref name="initTimerA" scoped="" ref="0x40510510"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x40510270"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x405105f0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x405106d0"/>
        <function-ref name="initClocks" scoped="" ref="0x405107b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405038a0" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x405038a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40503a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x405292b8" loc="49:../../tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x405292b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x40529ab0"/>
        <function-ref name="initTimerB" scoped="" ref="0x40529570"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x40529650"/>
        <function-ref name="initTimerA" scoped="" ref="0x40529730"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x40529490"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x40529810"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x405298f0"/>
        <function-ref name="initClocks" scoped="" ref="0x405299d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40529cb8" loc="50:../../tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x40529cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40529e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4051eea8" loc="48:../../tos/platforms/z1/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4051eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405290c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x40548628" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x40548628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40548800"/>
        <function-ref name="getControl" scoped="" ref="0x405488e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x405489c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40548aa0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40548b80"/>
        <function-ref name="disableEvents" scoped="" ref="0x40548c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40548d40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40548e20"/>
        <function-ref name="setControl" scoped="" ref="0x40548f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x40556468" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x40556468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40556640"/>
        <function-ref name="getControl" scoped="" ref="0x40556720"/>
        <function-ref name="enableEvents" scoped="" ref="0x40556800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405568e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405569c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x40556aa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40556b80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40556c60"/>
        <function-ref name="setControl" scoped="" ref="0x40556d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x4054c518" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x4054c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4054c6f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4054c7d0"/>
        <function-ref name="captured" scoped="" ref="0x4054c8b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4054c990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4054ca70"/>
        <function-ref name="setEdge" scoped="" ref="0x4054cb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x40567930" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x40567930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40567b08"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40567be8"/>
        <function-ref name="captured" scoped="" ref="0x40567cc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40567da8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40567e88"/>
        <function-ref name="setEdge" scoped="" ref="0x40566010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x405515f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x405515f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405517d0"/>
        <function-ref name="setEvent" scoped="" ref="0x405518b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40551990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40551a70"/>
        <function-ref name="fired" scoped="" ref="0x40551b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x4055ddb8" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x4055ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055c010"/>
        <function-ref name="setEvent" scoped="" ref="0x4055c0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055c1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055c2b0"/>
        <function-ref name="fired" scoped="" ref="0x4055c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x40565438" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x40565438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40565610"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405656f0"/>
        <function-ref name="captured" scoped="" ref="0x405657d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405658b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40565990"/>
        <function-ref name="setEdge" scoped="" ref="0x40565a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x40560388" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x40560388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40560560"/>
        <function-ref name="getControl" scoped="" ref="0x40560640"/>
        <function-ref name="enableEvents" scoped="" ref="0x40560720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40560800"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405608e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405609c0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40560aa0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40560b80"/>
        <function-ref name="setControl" scoped="" ref="0x40560c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x40545e68" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x40545e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4053f050"/>
        <function-ref name="getControl" scoped="" ref="0x4053f130"/>
        <function-ref name="enableEvents" scoped="" ref="0x4053f210"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4053f2f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4053f3d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x4053f4b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4053f590"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4053f670"/>
        <function-ref name="setControl" scoped="" ref="0x4053f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x4055a788" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x4055a788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055a960"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4055aa40"/>
        <function-ref name="captured" scoped="" ref="0x4055ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4055ac00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4055ace0"/>
        <function-ref name="setEdge" scoped="" ref="0x4055adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x4055edb8" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x4055edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055d010"/>
        <function-ref name="setEvent" scoped="" ref="0x4055d0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055d1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055d2b0"/>
        <function-ref name="fired" scoped="" ref="0x4055d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x40554010" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x40554010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40554268"/>
        <function-ref name="getControl" scoped="" ref="0x40554348"/>
        <function-ref name="enableEvents" scoped="" ref="0x40554428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40554508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405545e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405546c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405547a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40554888"/>
        <function-ref name="setControl" scoped="" ref="0x40554968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x4054cdb8" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x4054cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40559010"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405590f0"/>
        <function-ref name="captured" scoped="" ref="0x405591d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405592b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40559390"/>
        <function-ref name="setEdge" scoped="" ref="0x40559470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x40566278" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x40566278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40566450"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40566530"/>
        <function-ref name="captured" scoped="" ref="0x40566610"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405666f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405667d0"/>
        <function-ref name="setEdge" scoped="" ref="0x405668b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x40554c00" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x40554c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40554dd8"/>
        <function-ref name="getControl" scoped="" ref="0x40554eb8"/>
        <function-ref name="enableEvents" scoped="" ref="0x40553010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405530f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405531d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405532b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40553390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40553470"/>
        <function-ref name="setControl" scoped="" ref="0x40553550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x40551db8" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x40551db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4054f010"/>
        <function-ref name="setEvent" scoped="" ref="0x4054f0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4054f1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4054f2b0"/>
        <function-ref name="fired" scoped="" ref="0x4054f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x405491f8" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x405491f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405493d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x405494b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40549590"/>
        <function-ref name="get" scoped="" ref="0x40549670"/>
        <function-ref name="disableEvents" scoped="" ref="0x40549750"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40549830"/>
        <function-ref name="getMode" scoped="" ref="0x40549910"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405499f0"/>
        <function-ref name="overflow" scoped="" ref="0x40549ad0"/>
        <function-ref name="setMode" scoped="" ref="0x40549bb0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40549c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x4055c5f8" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x4055c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055c7d0"/>
        <function-ref name="setEvent" scoped="" ref="0x4055c8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055c990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055ca70"/>
        <function-ref name="fired" scoped="" ref="0x4055cb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x4053f9e8" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x4053f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4053fbc0"/>
        <function-ref name="getControl" scoped="" ref="0x4053fca0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4053fd80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4053fe60"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40548010"/>
        <function-ref name="disableEvents" scoped="" ref="0x405480f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405481d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405482b0"/>
        <function-ref name="setControl" scoped="" ref="0x40548390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x40560ef8" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x40560ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4055f0e0"/>
        <function-ref name="getControl" scoped="" ref="0x4055f1c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x4055f2a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4055f380"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4055f460"/>
        <function-ref name="disableEvents" scoped="" ref="0x4055f540"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4055f620"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4055f700"/>
        <function-ref name="setControl" scoped="" ref="0x4055f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x40557c18" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x40557c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40557df0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40557ed0"/>
        <function-ref name="captured" scoped="" ref="0x4054c010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4054c0f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4054c1d0"/>
        <function-ref name="setEdge" scoped="" ref="0x4054c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x40567090" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x40567090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40567268"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40567348"/>
        <function-ref name="captured" scoped="" ref="0x40567428"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40567508"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405675e8"/>
        <function-ref name="setEdge" scoped="" ref="0x405676c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x4054ed58" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x4054ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40551010"/>
        <function-ref name="setEvent" scoped="" ref="0x405510f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405511d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405512b0"/>
        <function-ref name="fired" scoped="" ref="0x40551390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x4055d5f8" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x4055d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055d7d0"/>
        <function-ref name="setEvent" scoped="" ref="0x4055d8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055d990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055da70"/>
        <function-ref name="fired" scoped="" ref="0x4055db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x40566b18" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x40566b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40566cf0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x40566dd0"/>
        <function-ref name="captured" scoped="" ref="0x40566eb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40565010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405650f0"/>
        <function-ref name="setEdge" scoped="" ref="0x405651d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x405537e8" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x405537e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405539c0"/>
        <function-ref name="getControl" scoped="" ref="0x40553aa0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40553b80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40553c60"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40553d40"/>
        <function-ref name="disableEvents" scoped="" ref="0x40553e20"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40553f00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40560010"/>
        <function-ref name="setControl" scoped="" ref="0x405600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x405596a0" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x405596a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40559878"/>
        <function-ref name="setClockSource" scoped="" ref="0x40559958"/>
        <function-ref name="enableEvents" scoped="" ref="0x40559a38"/>
        <function-ref name="get" scoped="" ref="0x40559b18"/>
        <function-ref name="disableEvents" scoped="" ref="0x40559bf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40559cd8"/>
        <function-ref name="getMode" scoped="" ref="0x40559db8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40559e98"/>
        <function-ref name="overflow" scoped="" ref="0x40556010"/>
        <function-ref name="setMode" scoped="" ref="0x405560f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x4055cdb8" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x4055cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055b010"/>
        <function-ref name="setEvent" scoped="" ref="0x4055b0f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055b1d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055b2b0"/>
        <function-ref name="fired" scoped="" ref="0x4055b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x4055beb8" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x4055beb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055a0c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x4055a1a0"/>
        <function-ref name="captured" scoped="" ref="0x4055a280"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4055a360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4055a440"/>
        <function-ref name="setEdge" scoped="" ref="0x4055a520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x4055b5f8" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x4055b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055b8d0"/>
        <function-ref name="setEvent" scoped="" ref="0x4055b9b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055ba90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055bb70"/>
        <function-ref name="fired" scoped="" ref="0x4055bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x4055e5f8" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x4055e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x4055e7d0"/>
        <function-ref name="setEvent" scoped="" ref="0x4055e8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x4055e990"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x4055ea70"/>
        <function-ref name="fired" scoped="" ref="0x4055eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x4055fa78" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x4055fa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x4055fc50"/>
        <function-ref name="getControl" scoped="" ref="0x4055fd30"/>
        <function-ref name="enableEvents" scoped="" ref="0x4055fe10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x4055fef0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x4055e010"/>
        <function-ref name="disableEvents" scoped="" ref="0x4055e0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4055e1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x4055e2b0"/>
        <function-ref name="setControl" scoped="" ref="0x4055e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x4057d4e8" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x4057d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4057d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x4057d190" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x4057d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4057d368"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x4057d840" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x4057d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4057da18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x40562df0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x40562df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4057d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40562140" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40562140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40562318"/>
        <function-ref name="setClockSource" scoped="" ref="0x405623f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405624d8"/>
        <function-ref name="get" scoped="" ref="0x405625b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x40562698"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40562778"/>
        <function-ref name="getMode" scoped="" ref="0x40562858"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40562938"/>
        <function-ref name="overflow" scoped="" ref="0x40562a18"/>
        <function-ref name="setMode" scoped="" ref="0x40562af8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40562bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x40588f08" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x40588f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405870f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x40588bb0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x40588bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40588d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x40587270" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x40587270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40587448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x40588848" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x40588848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40588a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40589b48" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40589b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40589d20"/>
        <function-ref name="setClockSource" scoped="" ref="0x40589e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x40589ee0"/>
        <function-ref name="get" scoped="" ref="0x40588010"/>
        <function-ref name="disableEvents" scoped="" ref="0x405880f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405881d0"/>
        <function-ref name="getMode" scoped="" ref="0x405882b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40588390"/>
        <function-ref name="overflow" scoped="" ref="0x40588470"/>
        <function-ref name="setMode" scoped="" ref="0x40588550"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40588630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405b2010" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405b21e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405b22c8"/>
        <function-ref name="captured" scoped="" ref="0x405b23a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405b2488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405b2568"/>
        <function-ref name="setEdge" scoped="" ref="0x405b2648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x40585d58" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x40585d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x40584010"/>
        <function-ref name="getControl" scoped="" ref="0x405840f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x405841d0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405842b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40584390"/>
        <function-ref name="disableEvents" scoped="" ref="0x40584470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40584550"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40584630"/>
        <function-ref name="setControl" scoped="" ref="0x40584710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405b1430" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405b1608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40584890" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x40584890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x40584a68"/>
        <function-ref name="setEvent" scoped="" ref="0x40584b48"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40584c28"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40584d08"/>
        <function-ref name="fired" scoped="" ref="0x40584de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405b27c8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405b27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b29a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x405b2a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x405b2b60"/>
        <function-ref name="get" scoped="" ref="0x405b2c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x405b2d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405b2e00"/>
        <function-ref name="getMode" scoped="" ref="0x405b2ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405b1010"/>
        <function-ref name="overflow" scoped="" ref="0x405b10f0"/>
        <function-ref name="setMode" scoped="" ref="0x405b11d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405aee88" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405aee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405bd070"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405bd150"/>
        <function-ref name="captured" scoped="" ref="0x405bd230"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405bd310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405bd3f0"/>
        <function-ref name="setEdge" scoped="" ref="0x405bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405b0ca8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405b0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405b0e80"/>
        <function-ref name="getControl" scoped="" ref="0x405ae010"/>
        <function-ref name="enableEvents" scoped="" ref="0x405ae0f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405ae1d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405ae2b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405ae390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405ae470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405ae550"/>
        <function-ref name="setControl" scoped="" ref="0x405ae630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405bc278" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405bc278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405bc450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405ae7b0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405ae7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405ae988"/>
        <function-ref name="setEvent" scoped="" ref="0x405aea68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405aeb48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405aec28"/>
        <function-ref name="fired" scoped="" ref="0x405aed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405bd650" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405bd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405bd828"/>
        <function-ref name="setClockSource" scoped="" ref="0x405bd908"/>
        <function-ref name="enableEvents" scoped="" ref="0x405bd9e8"/>
        <function-ref name="get" scoped="" ref="0x405bdac8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405bdba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405bdc88"/>
        <function-ref name="getMode" scoped="" ref="0x405bdd68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405bde48"/>
        <function-ref name="overflow" scoped="" ref="0x405bdf28"/>
        <function-ref name="setMode" scoped="" ref="0x405bc018"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405bc0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405bacc8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405bacc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405baea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405b9010"/>
        <function-ref name="captured" scoped="" ref="0x405b90f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405b91d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405b92b0"/>
        <function-ref name="setEdge" scoped="" ref="0x405b9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405bbaf0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405bbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405bbcc8"/>
        <function-ref name="getControl" scoped="" ref="0x405bbda8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405bbe88"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405ba010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405ba0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405ba1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405ba2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405ba390"/>
        <function-ref name="setControl" scoped="" ref="0x405ba470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405b8190" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405b8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405b8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405ba5f0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405ba5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405ba7c8"/>
        <function-ref name="setEvent" scoped="" ref="0x405ba8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405ba988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405baa68"/>
        <function-ref name="fired" scoped="" ref="0x405bab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405b9510" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405b9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405b96e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x405b97c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405b98a8"/>
        <function-ref name="get" scoped="" ref="0x405b9988"/>
        <function-ref name="disableEvents" scoped="" ref="0x405b9a68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405b9b48"/>
        <function-ref name="getMode" scoped="" ref="0x405b9c28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405b9d08"/>
        <function-ref name="overflow" scoped="" ref="0x405b9de8"/>
        <function-ref name="setMode" scoped="" ref="0x405b9ec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405b6be8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405b6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405b6dc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405b6ea0"/>
        <function-ref name="captured" scoped="" ref="0x405c5010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c50f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c51d0"/>
        <function-ref name="setEdge" scoped="" ref="0x405c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405b7a10" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405b7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405b7be8"/>
        <function-ref name="getControl" scoped="" ref="0x405b7cc8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405b7da8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405b7e88"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405b6010"/>
        <function-ref name="disableEvents" scoped="" ref="0x405b60f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405b61d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405b62b0"/>
        <function-ref name="setControl" scoped="" ref="0x405b6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405c4080" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405c4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405c4258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405b6510" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405b6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405b66e8"/>
        <function-ref name="setEvent" scoped="" ref="0x405b67c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405b68a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405b6988"/>
        <function-ref name="fired" scoped="" ref="0x405b6a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405c5430" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405c5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c5608"/>
        <function-ref name="setClockSource" scoped="" ref="0x405c56e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405c57c8"/>
        <function-ref name="get" scoped="" ref="0x405c58a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405c5988"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c5a68"/>
        <function-ref name="getMode" scoped="" ref="0x405c5b48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c5c28"/>
        <function-ref name="overflow" scoped="" ref="0x405c5d08"/>
        <function-ref name="setMode" scoped="" ref="0x405c5de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405c5ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405c2b08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405c2b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405c2ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405c2dc0"/>
        <function-ref name="captured" scoped="" ref="0x405c2ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c1010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c10f0"/>
        <function-ref name="setEdge" scoped="" ref="0x405c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405c38f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405c38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405c3ad0"/>
        <function-ref name="getControl" scoped="" ref="0x405c3bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x405c3c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405c3d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405c3e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x405c2010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405c20f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405c21d0"/>
        <function-ref name="setControl" scoped="" ref="0x405c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405bf010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405bf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405c2430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405c2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405c2608"/>
        <function-ref name="setEvent" scoped="" ref="0x405c26e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405c27c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405c28a8"/>
        <function-ref name="fired" scoped="" ref="0x405c2988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405c1350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c1528"/>
        <function-ref name="setClockSource" scoped="" ref="0x405c1608"/>
        <function-ref name="enableEvents" scoped="" ref="0x405c16e8"/>
        <function-ref name="get" scoped="" ref="0x405c17c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405c18a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c1988"/>
        <function-ref name="getMode" scoped="" ref="0x405c1a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c1b48"/>
        <function-ref name="overflow" scoped="" ref="0x405c1c28"/>
        <function-ref name="setMode" scoped="" ref="0x405c1d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405c1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405cda28" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405cda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405cdc00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405cdce0"/>
        <function-ref name="captured" scoped="" ref="0x405cddc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405cdea0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405cc010"/>
        <function-ref name="setEdge" scoped="" ref="0x405cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405be870" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405be870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405bea48"/>
        <function-ref name="getControl" scoped="" ref="0x405beb28"/>
        <function-ref name="enableEvents" scoped="" ref="0x405bec08"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405bece8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405bedc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405beea8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405cd010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405cd0f0"/>
        <function-ref name="setControl" scoped="" ref="0x405cd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405cce88" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405cce88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405cb070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405cd350" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405cd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405cd528"/>
        <function-ref name="setEvent" scoped="" ref="0x405cd608"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405cd6e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405cd7c8"/>
        <function-ref name="fired" scoped="" ref="0x405cd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405cc270" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405cc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405cc448"/>
        <function-ref name="setClockSource" scoped="" ref="0x405cc528"/>
        <function-ref name="enableEvents" scoped="" ref="0x405cc608"/>
        <function-ref name="get" scoped="" ref="0x405cc6e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405cc7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405cc8a8"/>
        <function-ref name="getMode" scoped="" ref="0x405cc988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405cca68"/>
        <function-ref name="overflow" scoped="" ref="0x405ccb48"/>
        <function-ref name="setMode" scoped="" ref="0x405ccc28"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405ccd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405c9868" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405c9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405c9a40"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405c9b20"/>
        <function-ref name="captured" scoped="" ref="0x405c9c00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c9ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c9dc0"/>
        <function-ref name="setEdge" scoped="" ref="0x405c9ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405ca700" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405ca700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405ca8d8"/>
        <function-ref name="getControl" scoped="" ref="0x405ca9b8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405caa98"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405cab78"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405cac58"/>
        <function-ref name="disableEvents" scoped="" ref="0x405cad38"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405cae18"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405caef8"/>
        <function-ref name="setControl" scoped="" ref="0x405c9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405c8c68" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405c8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405c8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405c9190" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405c9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405c9368"/>
        <function-ref name="setEvent" scoped="" ref="0x405c9448"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405c9528"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405c9608"/>
        <function-ref name="fired" scoped="" ref="0x405c96e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405c8050" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405c8050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405c8228"/>
        <function-ref name="setClockSource" scoped="" ref="0x405c8308"/>
        <function-ref name="enableEvents" scoped="" ref="0x405c83e8"/>
        <function-ref name="get" scoped="" ref="0x405c84c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x405c85a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405c8688"/>
        <function-ref name="getMode" scoped="" ref="0x405c8768"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405c8848"/>
        <function-ref name="overflow" scoped="" ref="0x405c8928"/>
        <function-ref name="setMode" scoped="" ref="0x405c8a08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405c8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405d56e8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405d56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405d58c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405d59a0"/>
        <function-ref name="captured" scoped="" ref="0x405d5a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405d5b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405d5c40"/>
        <function-ref name="setEdge" scoped="" ref="0x405d5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405c6588" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405c6588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405c6760"/>
        <function-ref name="getControl" scoped="" ref="0x405c6840"/>
        <function-ref name="enableEvents" scoped="" ref="0x405c6920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405c6a00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405c6ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405c6bc0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405c6ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405c6d80"/>
        <function-ref name="setControl" scoped="" ref="0x405c6e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405d4b00" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405d4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405d4cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405d5010" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405d51e8"/>
        <function-ref name="setEvent" scoped="" ref="0x405d52c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405d53a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405d5488"/>
        <function-ref name="fired" scoped="" ref="0x405d5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405d5ea0" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405d5ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d40c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x405d41a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x405d4280"/>
        <function-ref name="get" scoped="" ref="0x405d4360"/>
        <function-ref name="disableEvents" scoped="" ref="0x405d4440"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405d4520"/>
        <function-ref name="getMode" scoped="" ref="0x405d4600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405d46e0"/>
        <function-ref name="overflow" scoped="" ref="0x405d47c0"/>
        <function-ref name="setMode" scoped="" ref="0x405d48a0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405d0570" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405d0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405d0748"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405d0828"/>
        <function-ref name="captured" scoped="" ref="0x405d0908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405d09e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405d0ac8"/>
        <function-ref name="setEdge" scoped="" ref="0x405d0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405d2430" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405d2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405d2608"/>
        <function-ref name="getControl" scoped="" ref="0x405d26e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405d27c8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405d28a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405d2988"/>
        <function-ref name="disableEvents" scoped="" ref="0x405d2a68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405d2b48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405d2c28"/>
        <function-ref name="setControl" scoped="" ref="0x405d2d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405cf970" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405cf970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405cfb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405d2e88" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405d2e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405d0070"/>
        <function-ref name="setEvent" scoped="" ref="0x405d0150"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405d0230"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405d0310"/>
        <function-ref name="fired" scoped="" ref="0x405d03f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405d0d28" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405d0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d0f00"/>
        <function-ref name="setClockSource" scoped="" ref="0x405cf010"/>
        <function-ref name="enableEvents" scoped="" ref="0x405cf0f0"/>
        <function-ref name="get" scoped="" ref="0x405cf1d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405cf2b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405cf390"/>
        <function-ref name="getMode" scoped="" ref="0x405cf470"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405cf550"/>
        <function-ref name="overflow" scoped="" ref="0x405cf630"/>
        <function-ref name="setMode" scoped="" ref="0x405cf710"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405dc430" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x405dc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405dc608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x405dc6e8"/>
        <function-ref name="captured" scoped="" ref="0x405dc7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405dc8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405dc988"/>
        <function-ref name="setEdge" scoped="" ref="0x405dca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x405dd220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x405dd220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x405dd3f8"/>
        <function-ref name="getControl" scoped="" ref="0x405dd4d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x405dd5b8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x405dd698"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x405dd778"/>
        <function-ref name="disableEvents" scoped="" ref="0x405dd858"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405dd938"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x405dda18"/>
        <function-ref name="setControl" scoped="" ref="0x405ddaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x405db890" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x405db890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405dba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405ddc78" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x405ddc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x405dde50"/>
        <function-ref name="setEvent" scoped="" ref="0x405dc010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x405dc0f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x405dc1d0"/>
        <function-ref name="fired" scoped="" ref="0x405dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405dcbe8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x405dcbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405dcdc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x405dcea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x405db010"/>
        <function-ref name="get" scoped="" ref="0x405db0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x405db1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405db2b0"/>
        <function-ref name="getMode" scoped="" ref="0x405db390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405db470"/>
        <function-ref name="overflow" scoped="" ref="0x405db550"/>
        <function-ref name="setMode" scoped="" ref="0x405db630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x405db710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x405d7bd0" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x405d7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405d7da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x405dade0" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x405dade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x405d72c0" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x405d72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405d7498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x405d7748" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x405d7748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405d7920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404f14c8" loc="55:../../tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x404f14c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x404f16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403b66a8" loc="51:../../tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x403b66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x403b6880"/>
        <function-ref name="irq_postamble" scoped="" ref="0x403b6960"/>
        <function-ref name="sleep" scoped="" ref="0x403b6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x404f2528" loc="52:../../tos/platforms/z1/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x404f2528"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x404f2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405fe0e0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x405fe0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405fe2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4050a338" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x4050a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4050a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4050ac98" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x4050ac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4050ae70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4050a6d0" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x4050a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4050a8a8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4050a988"/>
        <function-ref name="runNextTask" scoped="" ref="0x4050aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403b8178" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x403b8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403b8350"/>
        <function-ref name="runTask" scoped="" ref="0x403b8430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403b79d8" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x403b79d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b7bb0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403b7c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x403b7d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x404d46b0" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x404d46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404d4888"/>
        <function-ref name="runTask" scoped="" ref="0x404d4968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404ddb38" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x404ddb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x404ddd10"/>
        <function-ref name="irq_postamble" scoped="" ref="0x404dddf0"/>
        <function-ref name="sleep" scoped="" ref="0x404dded0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x404d5e48" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x404d5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d4050"/>
        <function-ref name="taskLoop" scoped="" ref="0x404d4130"/>
        <function-ref name="runNextTask" scoped="" ref="0x404d4210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x405f8010" loc="13:GPIO_LedsC.nc">
      <component-ref qname="GPIO_LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x405f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405f81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40601d28" loc="14:GPIO_LedsC.nc">
      <component-ref qname="GPIO_LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x40601d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406008a8"/>
        <function-ref name="fired" scoped="" ref="0x40607ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40600268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40600010"/>
        <function-ref name="getdt" scoped="" ref="0x40600d58"/>
        <function-ref name="gett0" scoped="" ref="0x40600b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40607d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40607370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40600588"/>
        <function-ref name="startOneShot" scoped="" ref="0x406075f0"/>
        <function-ref name="stop" scoped="" ref="0x40607870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404fdcd8" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="GPIO_LedsApp.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x404fdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fa8a8"/>
        <function-ref name="fired" scoped="" ref="0x404fcaa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fa268"/>
        <function-ref name="isOneShot" scoped="" ref="0x406fa010"/>
        <function-ref name="getdt" scoped="" ref="0x406fad58"/>
        <function-ref name="gett0" scoped="" ref="0x406fab00"/>
        <function-ref name="isRunning" scoped="" ref="0x404fcd00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404fc350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fa588"/>
        <function-ref name="startOneShot" scoped="" ref="0x404fc5d0"/>
        <function-ref name="stop" scoped="" ref="0x404fc850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40609bb0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x40609bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406146a8"/>
        <function-ref name="fired" scoped="" ref="0x40616948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40614068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40616df8"/>
        <function-ref name="getdt" scoped="" ref="0x40614b58"/>
        <function-ref name="gett0" scoped="" ref="0x40614900"/>
        <function-ref name="isRunning" scoped="" ref="0x40616ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406161f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40614388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40616470"/>
        <function-ref name="stop" scoped="" ref="0x406166f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40613be8" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x40613be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4061e730"/>
        <function-ref name="fired" scoped="" ref="0x406109b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4061e0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40610e60"/>
        <function-ref name="getdt" scoped="" ref="0x4061ebe0"/>
        <function-ref name="gett0" scoped="" ref="0x4061e988"/>
        <function-ref name="isRunning" scoped="" ref="0x40610c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40610258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4061e410"/>
        <function-ref name="startOneShot" scoped="" ref="0x406104d8"/>
        <function-ref name="stop" scoped="" ref="0x40610758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4061bbf8" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x4061bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4061d278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40613438" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x40613438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40613610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x406191b8" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x406191b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4069d670"/>
        <function-ref name="fired" scoped="" ref="0x40619e20"/>
        <function-ref name="startAt" scoped="" ref="0x4069d330"/>
        <function-ref name="isRunning" scoped="" ref="0x4069d0b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4069d8e8"/>
        <function-ref name="start" scoped="" ref="0x40619908"/>
        <function-ref name="stop" scoped="" ref="0x40619ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4061ad48" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x4061ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4061af20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407ccdb0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x407ccdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c9278"/>
        <function-ref name="fired" scoped="" ref="0x407cba30"/>
        <function-ref name="startAt" scoped="" ref="0x407cbf20"/>
        <function-ref name="isRunning" scoped="" ref="0x407cbca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x407c94f0"/>
        <function-ref name="start" scoped="" ref="0x407cb518"/>
        <function-ref name="stop" scoped="" ref="0x407cb7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407cc958" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x407cc958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407ccb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x407d7c88" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x407d7c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407d7e60"/>
        <function-ref name="setEvent" scoped="" ref="0x407d6010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407d60f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407d61d0"/>
        <function-ref name="fired" scoped="" ref="0x407d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x407d8630" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x407d8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d8808"/>
        <function-ref name="setClockSource" scoped="" ref="0x407d88e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d89c8"/>
        <function-ref name="get" scoped="" ref="0x407d8aa8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d8b88"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d8c68"/>
        <function-ref name="getMode" scoped="" ref="0x407d8d48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d8e28"/>
        <function-ref name="overflow" scoped="" ref="0x407d8f08"/>
        <function-ref name="setMode" scoped="" ref="0x407d7010"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x407d7250" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x407d7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407d7428"/>
        <function-ref name="getControl" scoped="" ref="0x407d7508"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d75e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407d76c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407d77a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d7888"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407d7968"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407d7a48"/>
        <function-ref name="setControl" scoped="" ref="0x407d7b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x406353c8" loc="53:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x406353c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x406355a0"/>
        <function-ref name="setEvent" scoped="" ref="0x40635680"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x40635760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x40635840"/>
        <function-ref name="fired" scoped="" ref="0x40635920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x406375c8" loc="51:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x406375c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406377a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x40637880"/>
        <function-ref name="enableEvents" scoped="" ref="0x40637960"/>
        <function-ref name="get" scoped="" ref="0x40637a40"/>
        <function-ref name="disableEvents" scoped="" ref="0x40637b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40637c00"/>
        <function-ref name="getMode" scoped="" ref="0x40637ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40637dc0"/>
        <function-ref name="overflow" scoped="" ref="0x40637ea0"/>
        <function-ref name="setMode" scoped="" ref="0x40636010"/>
        <function-ref name="setInputDivider" scoped="" ref="0x406360f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x406365e8" loc="52:../../tos/platforms/z1/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x406365e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x406367c0"/>
        <function-ref name="getControl" scoped="" ref="0x406368a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x40636980"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x40636a60"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x40636b40"/>
        <function-ref name="disableEvents" scoped="" ref="0x40636c20"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40636d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x40636de0"/>
        <function-ref name="setControl" scoped="" ref="0x40636ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x407d16b0" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x407d16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x407d1888"/>
        <function-ref name="setEvent" scoped="" ref="0x407d1968"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x407d1a48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x407d1b28"/>
        <function-ref name="fired" scoped="" ref="0x407d1c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x407d2060" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x407d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d2238"/>
        <function-ref name="setClockSource" scoped="" ref="0x407d2318"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d23f8"/>
        <function-ref name="get" scoped="" ref="0x407d24d8"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d25b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d2698"/>
        <function-ref name="getMode" scoped="" ref="0x407d2778"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d2858"/>
        <function-ref name="overflow" scoped="" ref="0x407d2938"/>
        <function-ref name="setMode" scoped="" ref="0x407d2a18"/>
        <function-ref name="setInputDivider" scoped="" ref="0x407d2af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407d56b8" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x407d56b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407d4b80"/>
        <function-ref name="fired" scoped="" ref="0x407d4350"/>
        <function-ref name="startAt" scoped="" ref="0x407d4840"/>
        <function-ref name="isRunning" scoped="" ref="0x407d45c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x407d4df8"/>
        <function-ref name="start" scoped="" ref="0x407d5e08"/>
        <function-ref name="stop" scoped="" ref="0x407d40d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d5240" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x407d5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d5418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x407d2c58" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x407d2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x407d2e30"/>
        <function-ref name="getControl" scoped="" ref="0x407d2f10"/>
        <function-ref name="enableEvents" scoped="" ref="0x407d1010"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x407d10f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x407d11d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x407d12b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407d1390"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x407d1470"/>
        <function-ref name="setControl" scoped="" ref="0x407d1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40662cf0" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x40662cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40665478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40665968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406656f0"/>
        <function-ref name="overflow" scoped="" ref="0x40665be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x40661810" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x40661810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4065e010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4065e500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4065e288"/>
        <function-ref name="overflow" scoped="" ref="0x4065e778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x406664b8" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x406664b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40666690"/>
        <function-ref name="setClockSource" scoped="" ref="0x40666770"/>
        <function-ref name="enableEvents" scoped="" ref="0x40666850"/>
        <function-ref name="get" scoped="" ref="0x40666930"/>
        <function-ref name="disableEvents" scoped="" ref="0x40666a10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40666af0"/>
        <function-ref name="getMode" scoped="" ref="0x40666bd0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40666cb0"/>
        <function-ref name="overflow" scoped="" ref="0x40666d90"/>
        <function-ref name="setMode" scoped="" ref="0x40666e70"/>
        <function-ref name="setInputDivider" scoped="" ref="0x40677010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4066e388" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x4066e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4066ead8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40666010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4066ed50"/>
        <function-ref name="overflow" scoped="" ref="0x40666288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40678380" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x40678380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40678ad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40688010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40678d48"/>
        <function-ref name="overflow" scoped="" ref="0x40688288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406750c0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x406750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40675810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40675d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40675a88"/>
        <function-ref name="overflow" scoped="" ref="0x40678010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407c87d0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x407c87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c7c80"/>
        <function-ref name="fired" scoped="" ref="0x407c7450"/>
        <function-ref name="startAt" scoped="" ref="0x407c7940"/>
        <function-ref name="isRunning" scoped="" ref="0x407c76c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x407c7ef8"/>
        <function-ref name="start" scoped="" ref="0x407c8f20"/>
        <function-ref name="stop" scoped="" ref="0x407c71d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x407c54c0" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x407c54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x40504720"/>
            <typename><typedef-ref name="T32khz" ref="0x405048e8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407c3980"/>
        <function-ref name="fired" scoped="" ref="0x407c3150"/>
        <function-ref name="startAt" scoped="" ref="0x407c3640"/>
        <function-ref name="isRunning" scoped="" ref="0x407c33c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x407c3bf8"/>
        <function-ref name="start" scoped="" ref="0x407c5c10"/>
        <function-ref name="stop" scoped="" ref="0x407c5eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x407c6278" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x407c6278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407c69c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c6eb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c6c40"/>
        <function-ref name="overflow" scoped="" ref="0x407c5150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406ba9a8" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x406ba9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406bab80"/>
        <function-ref name="runTask" scoped="" ref="0x406bac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406bc010" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x406bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406ba4e0"/>
        <function-ref name="fired" scoped="" ref="0x406bcc78"/>
        <function-ref name="startAt" scoped="" ref="0x406ba1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x406bcef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x406ba758"/>
        <function-ref name="start" scoped="" ref="0x406bc760"/>
        <function-ref name="stop" scoped="" ref="0x406bca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406acc60" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406acc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bd790"/>
        <function-ref name="fired" scoped="" ref="0x406aba20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406bd150"/>
        <function-ref name="isOneShot" scoped="" ref="0x406abed0"/>
        <function-ref name="getdt" scoped="" ref="0x406bdc40"/>
        <function-ref name="gett0" scoped="" ref="0x406bd9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x406abc78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406ab2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406bd470"/>
        <function-ref name="startOneShot" scoped="" ref="0x406ab548"/>
        <function-ref name="stop" scoped="" ref="0x406ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406f1560" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x406f1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406f1738"/>
        <function-ref name="runTask" scoped="" ref="0x406f1818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406e0338" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x406e0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406f2e38"/>
        <function-ref name="fired" scoped="" ref="0x406f20f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406f27f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x406f25a0"/>
        <function-ref name="getdt" scoped="" ref="0x406f1310"/>
        <function-ref name="gett0" scoped="" ref="0x406f10b8"/>
        <function-ref name="isRunning" scoped="" ref="0x406f2348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406e0960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406f2b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x406e0be0"/>
        <function-ref name="stop" scoped="" ref="0x406e0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b8f00" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x406b8f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406e1b40"/>
        <function-ref name="fired" scoped="" ref="0x406cbce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406e14e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406e1278"/>
        <function-ref name="getdt" scoped="" ref="0x406e0048"/>
        <function-ref name="gett0" scoped="" ref="0x406e1da8"/>
        <function-ref name="isRunning" scoped="" ref="0x406e1010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406cb558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406e1810"/>
        <function-ref name="startOneShot" scoped="" ref="0x406cb7e8"/>
        <function-ref name="stop" scoped="" ref="0x406cba78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406ef940" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x406ef940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406fd360" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x406fd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x405042e0"/>
            <typename><typedef-ref name="TMilli" ref="0x405044a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fdab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406fc010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fdd28"/>
        <function-ref name="overflow" scoped="" ref="0x406fc288"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404fb708" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403be1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40431b70" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x40506f08" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x40507de8" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x40506b08" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x40507a30" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x40506308" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x405072c0" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x40507678" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x40506708" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x404f1168" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40437e38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x40546e98" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x40546d40" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x405405b0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40522a38"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x40521010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x40545430" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x40545c70" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x405468f0" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x40545828" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40540a08" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x40540e50" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x405464c0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40522a38"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x40521010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40546368" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40522a38"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x40521010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x4054fb38" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x40557250" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x405570f8" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x405579a0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40557848" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40558bd8" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40558738" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x40558168" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x40558010" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40091e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x405526e8" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x40552c40" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40552ae8" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x4054e218" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x4054e0c0" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x4054e7b8" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x4054e660" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4054eb60" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4054bb80" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x4054a9d8" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x4054a880" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x4054a010" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4053e308" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x4054a408" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4053eb50" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4054b7d8" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4053e758" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4053ef18" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x4054b420" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4054b2c8" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x40549010" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x4054ae68" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x400920c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4056d768" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x404dd5d8" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x404dd9d0" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x404dd168" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x404f22b0" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403b1e60" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403b7798" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x403b72d0" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403bd6d8" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403be1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403bdbf0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405f88d0" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405f88d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40601038" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40604e50" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40602010" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40603c68" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40603e50" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x406037c0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x406019b0" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40601480" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40603300" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405f8f28" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405f8dd0" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x406029f8" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406026b0" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40602898" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x406045d0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40604478" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40604aa0" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061b418" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061b418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4061b8f8" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x40092300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40618540" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40618540"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406186a8" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x406249a8" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40625628" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40624360" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40624010" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          </variable>
          <variable name="dt" ref="0x40624200" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40625a70" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40624e38" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40618cd8" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40618b80" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406186a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406251c8" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406633c8" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406633c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40663530" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40663530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40663a18" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40663530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40662510" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40662010" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403b22e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40662910" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
